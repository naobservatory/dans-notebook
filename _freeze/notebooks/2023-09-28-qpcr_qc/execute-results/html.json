{
  "hash": "c6f15f09db673fad8178e663549f78a5",
  "result": {
    "markdown": "---\ntitle: \"2023-09-28 qPCR Quality Control\"\nauthor: \"Dan Rice\"\ndate: 2023-09-28\ntoc: true\nformat:\n  html:\n    code-fold: false\n---\n\n## Objectives\n\nPutting together a standard set of quality control checks and plots for qPCR.\nIncludes standard curves and dilution series.\n\n## Preliminary work\n\nThis is the same data as in [this analysis](2023-09-15-qpcr_analysis.html).\n\n## Data import\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(purrr)\nlibrary(tibble)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(broom)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nread_data <- function(dir, pattern, col_types) {\n  list.files(\n    dir,\n    pattern = pattern,\n    full.names = TRUE,\n  ) |>\n    map(function(f) {\n      read_csv(f, skip = 23, col_types = col_types, ) |>\n        mutate(plate = str_extract(basename(f), \"(.*)_(.*)_[0-9]{8}_[0-9]{6}\\\\.csv\", group = 1))\n    }) |>\n    list_rbind() |>\n    separate_wider_regex(\n      `Well Position`,\n      c(well_row = \"[A-Z]+\", well_col = \"[0-9]+\"),\n      cols_remove = FALSE,\n    ) |>\n    mutate(well_col = as.integer(well_col))\n}\n```\n:::\n\n\nThere were some wells mixed up between the intended plate layout and\nthe actual plate for Norovirus. See [Results doc](https://docs.google.com/document/d/1tW-D4xxeYafqgjE4Sw0WGtCAkgf_qGxNhoWq2x7zHY4/edit#bookmark=id.jgbgdox3hte1).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncorrected_samples <- tribble(\n  ~`Well Position`, ~Sample,\n  \"F7\",             \"empty\",\n  \"F8\",             \"empty\",\n  \"F9\",             \"empty\",\n  \"F10\",            \"empty\",\n  \"F11\",            \"empty\",\n  \"F12\",            \"empty\",\n  \"G7\",             \"6C/100\",\n  \"G8\",             \"6C/10\",\n  \"G9\",             \"7C/100\",\n  \"G10\",            \"7C/10\",\n  \"G11\",            \"3C/100\",\n  \"G12\",            \"3C/10\",\n  \"H7\",             \"1C/100\",\n  \"H8\",             \"1C/10\",\n  \"H9\",             \"1C/100\",\n  \"H10\",            \"1C/10\",\n  \"H11\",            \"NTC\",\n  \"H12\",            \"NTC\",\n) |>\n  add_column(plate = \"2023-09-14_Noro_Extractions\")\ncorrect_samples <- function(df, corrected_samples) {\n  left_join(df, corrected_samples, by = join_by(`Well Position`, plate)) |>\n    mutate(Sample = ifelse(is.na(Sample.y), Sample.x, Sample.y), .keep = \"unused\")\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_dir <-\n  \"~/airport/[2023-09-06] Extraction-kit comparison 2: Settled Solids/\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmetadata_file <- paste0(\n  data_dir,\n  \"[2023-09-11] Extraction Experiment 2 templates and results\",\n  \" - sampleMetadata.csv\"\n)\nmetadata <- read_csv(metadata_file) |> glimpse()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 21 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): Sample_ID, Extraction_kit, Short_kit, Elution_format, Brand, NA_Target\ndbl (2): Kit Batch, Elution_volume\nlgl (1): FP_sampleID\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 21\nColumns: 9\n$ Sample_ID      <chr> \"1A\", \"1B\", \"1C\", \"2A\", \"2B\", \"2C\", \"3A\", \"3B\", \"3C\", \"…\n$ Extraction_kit <chr> \"Zymo quick-RNA\", \"Zymo quick-RNA\", \"Zymo quick-RNA\", \"…\n$ Short_kit      <chr> \"1_ZR\", \"1_ZR\", \"1_ZR\", \"2_ZD\", \"2_ZD\", \"2_ZD\", \"3_IPL\"…\n$ `Kit Batch`    <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3…\n$ Elution_volume <dbl> 30, 30, 30, 100, 100, 100, 100, 100, 100, 60, 60, 60, 1…\n$ Elution_format <chr> \"15*2\", \"15*2\", \"15*2\", \"50*2\", \"50*2\", \"50*2\", \"50*2\",…\n$ Brand          <chr> \"Zymo\", \"Zymo\", \"Zymo\", \"Zymo\", \"Zymo\", \"Zymo\", \"Invitr…\n$ NA_Target      <chr> \"RNA\", \"RNA\", \"RNA\", \"DNA+RNA\", \"DNA+RNA\", \"DNA+RNA\", \"…\n$ FP_sampleID    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncol_types <- list(\n  Target = col_character(),\n  Cq = col_double()\n)\nres_data <- read_data(\n  paste0(data_dir, \"qpcr\"),\n  pattern = \"Results\",\n  col_types = col_types\n) |>\n  correct_samples(corrected_samples) |>\n  separate_wider_regex(\n    Sample,\n    c(Sample_ID = \".+\", \"/\", dilution = \"[0-9]+$\"),\n    too_few = \"align_start\",\n  ) |>\n  mutate(\n    replicate = str_extract(Sample_ID, \"[A-Z]$\"),\n    quantity = as.double(Sample_ID),\n    dilution = as.integer(dilution) |> replace_na(1),\n  ) |>\n  left_join(metadata, by = join_by(Sample_ID)) |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `quantity = as.double(Sample_ID)`.\nCaused by warning:\n! NAs introduced by coercion\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 369\nColumns: 35\n$ Well                    <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,…\n$ well_row                <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"…\n$ well_col                <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3…\n$ `Well Position`         <chr> \"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"A7\", \"A8\"…\n$ Omit                    <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS…\n$ Target                  <chr> \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\"…\n$ Task                    <chr> \"UNKNOWN\", \"UNKNOWN\", \"UNKNOWN\", \"UNKNOWN\", \"U…\n$ Reporter                <chr> \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM…\n$ Quencher                <chr> \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"N…\n$ `Amp Status`            <chr> \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"NO_…\n$ `Amp Score`             <dbl> 1.1701024, 1.0212594, 1.1604009, 1.1057531, 1.…\n$ `Curve Quality`         <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ `Result Quality Issues` <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Cq                      <dbl> 32.44077, 35.24757, 33.72678, 34.44077, 34.704…\n$ `Cq Confidence`         <dbl> 0.9451320, 0.9773032, 0.9759027, 0.9634213, 0.…\n$ `Cq Mean`               <dbl> 33.80504, 33.80504, 33.80504, 34.31332, 34.313…\n$ `Cq SD`                 <dbl> 1.4050310, 1.4050310, 1.4050310, 0.4683633, 0.…\n$ `Auto Threshold`        <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ Threshold               <dbl> 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04…\n$ `Auto Baseline`         <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ `Baseline Start`        <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ `Baseline End`          <dbl> 29, 32, 30, 31, 31, 31, 31, 31, 31, 21, 21, 21…\n$ plate                   <chr> \"2023-09-14_Cov2_extractions\", \"2023-09-14_Cov…\n$ Sample_ID               <chr> \"1A\", \"1A\", \"1A\", \"3C\", \"3C\", \"3C\", \"6B\", \"6B\"…\n$ dilution                <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ replicate               <chr> \"A\", \"A\", \"A\", \"C\", \"C\", \"C\", \"B\", \"B\", \"B\", N…\n$ quantity                <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, 1000, 1000…\n$ Extraction_kit          <chr> \"Zymo quick-RNA\", \"Zymo quick-RNA\", \"Zymo quic…\n$ Short_kit               <chr> \"1_ZR\", \"1_ZR\", \"1_ZR\", \"3_IPL\", \"3_IPL\", \"3_I…\n$ `Kit Batch`             <dbl> 1, 1, 1, 1, 1, 1, 3, 3, 3, NA, NA, NA, 1, 1, 1…\n$ Elution_volume          <dbl> 30, 30, 30, 100, 100, 100, 80, 80, 80, NA, NA,…\n$ Elution_format          <chr> \"15*2\", \"15*2\", \"15*2\", \"50*2\", \"50*2\", \"50*2\"…\n$ Brand                   <chr> \"Zymo\", \"Zymo\", \"Zymo\", \"Invitrogen\", \"Invitro…\n$ NA_Target               <chr> \"RNA\", \"RNA\", \"RNA\", \"RNA\", \"RNA\", \"RNA\", \"RNA…\n$ FP_sampleID             <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\namp_data <- read_data(\n  paste0(data_dir, \"qpcr\"),\n  pattern = \"Amplification Data\",\n  col_types = col_types\n) |>\n  correct_samples(corrected_samples) |>\n  mutate(\n    replicate = str_extract(Sample, \"[A-Z]\"),\n    Sample_ID = str_split_i(Sample, \"/\", 1),\n    dilution = str_split_i(Sample, \"/\", 2) |> as.integer() |> replace_na(1),\n    quantity = as.double(Sample),\n  ) |>\n  left_join(metadata, by = join_by(Sample_ID)) |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The following named parsers don't match the column names: Cq\nThe following named parsers don't match the column names: Cq\nThe following named parsers don't match the column names: Cq\nThe following named parsers don't match the column names: Cq\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `quantity = as.double(Sample)`.\nCaused by warning:\n! NAs introduced by coercion\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 14,760\nColumns: 23\n$ Well            <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ well_row        <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\",…\n$ well_col        <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ `Well Position` <chr> \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", …\n$ `Cycle Number`  <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,…\n$ Target          <chr> \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\"…\n$ Rn              <dbl> 0.8770601, 0.8700446, 0.8562693, 0.8477768, 0.8438748,…\n$ dRn             <dbl> 3.107913e-02, 2.618482e-02, 1.453075e-02, 8.159439e-03…\n$ Omit            <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE…\n$ plate           <chr> \"2023-09-14_Cov2_extractions\", \"2023-09-14_Cov2_extrac…\n$ Sample          <chr> \"1A\", \"1A\", \"1A\", \"1A\", \"1A\", \"1A\", \"1A\", \"1A\", \"1A\", …\n$ replicate       <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\",…\n$ Sample_ID       <chr> \"1A\", \"1A\", \"1A\", \"1A\", \"1A\", \"1A\", \"1A\", \"1A\", \"1A\", …\n$ dilution        <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ quantity        <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Extraction_kit  <chr> \"Zymo quick-RNA\", \"Zymo quick-RNA\", \"Zymo quick-RNA\", …\n$ Short_kit       <chr> \"1_ZR\", \"1_ZR\", \"1_ZR\", \"1_ZR\", \"1_ZR\", \"1_ZR\", \"1_ZR\"…\n$ `Kit Batch`     <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ Elution_volume  <dbl> 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30…\n$ Elution_format  <chr> \"15*2\", \"15*2\", \"15*2\", \"15*2\", \"15*2\", \"15*2\", \"15*2\"…\n$ Brand           <chr> \"Zymo\", \"Zymo\", \"Zymo\", \"Zymo\", \"Zymo\", \"Zymo\", \"Zymo\"…\n$ NA_Target       <chr> \"RNA\", \"RNA\", \"RNA\", \"RNA\", \"RNA\", \"RNA\", \"RNA\", \"RNA\"…\n$ FP_sampleID     <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n```\n:::\n:::\n\n\n## Amplification curves\n\n\n::: {.cell}\n\n```{.r .cell-code}\namp_data |>\n  filter(!is.na(Extraction_kit)) |>\n  ggplot(mapping = aes(\n    x = `Cycle Number`,\n    y = dRn,\n    color = as.factor(dilution),\n    group = Well\n  )) +\n  geom_line() +\n  facet_grid(\n    cols = vars(Extraction_kit), rows = vars(Target), scales = \"free_y\"\n  )\n```\n\n::: {.cell-output-display}\n![](2023-09-28-qpcr_qc_files/figure-html/unnamed-chunk-8-1.png){width=1344}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\namp_data |>\n  filter(!is.na(quantity)) |>\n  ggplot(mapping = aes(\n    x = `Cycle Number`,\n    y = dRn,\n    color = as.factor(quantity),\n    group = interaction(plate, Well),\n  )) +\n  geom_line() +\n  facet_wrap(~Target, scales = \"free_y\")\n```\n\n::: {.cell-output-display}\n![](2023-09-28-qpcr_qc_files/figure-html/unnamed-chunk-9-1.png){width=768}\n:::\n:::\n\n\n### Standard ruler\n\nMaximum efficiency means doubling every cycle.\nThe standard curve points here represent 10x dilutions.\nWe can compare the amplification curves for the standard curve samples against a standard ruler: a set of idealized curves $y(c) = y_0 2^c$ with $y_0$ spaced $10\\times$ apart.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_amp <- function(data, color) {\n  ggplot(data, aes(x = `Cycle Number`, y = dRn)) +\n    geom_line(mapping = aes(\n      color = as.factor({{ color }}),\n      group = interaction(plate, Well),\n    )) +\n    scale_y_log10(limits = c(1e-3, 1e1))\n}\n\nruler <- function(y0_from, num_rules) {\n  y0 <- 10^seq(from = y0_from, by = -1, length.out = num_rules)\n  rules <- crossing(`Cycle Number` = amp_data$`Cycle Number`, y0 = y0) |>\n    mutate(dRn = y0 * 2^`Cycle Number`)\n  geom_line(\n    data = rules,\n    mapping = aes(group = y0),\n    color = \"black\"\n  )\n}\n\nplot_amp_with_ruler <- function(target, y0_from, num_rules) {\n  amp_data |>\n    filter(!is.na(quantity), Target == target) |>\n    plot_amp(quantity) +\n    ruler(y0_from, num_rules) +\n    labs(title = target)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_amp_with_ruler(\"16S\", -6, 5)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 11 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 133 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-09-28-qpcr_qc_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot_amp_with_ruler(\"CrA\", -5, 5)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 25 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 133 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-09-28-qpcr_qc_files/figure-html/unnamed-chunk-11-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot_amp_with_ruler(\"Noro\", -8, 5)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 53 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 136 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-09-28-qpcr_qc_files/figure-html/unnamed-chunk-11-3.png){width=672}\n:::\n\n```{.r .cell-code}\nplot_amp_with_ruler(\"Cov2\", -9, 5)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 93 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 142 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-09-28-qpcr_qc_files/figure-html/unnamed-chunk-11-4.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndilution_kits <- c(\n  \"Invitrogen PureLink RNA\",\n  \"QIAamp Viral RNA mini kit\",\n  \"Qiagen AllPrep PowerViral DNA/RNA\",\n  \"Zymo quick-RNA\"\n)\ntarget <- \"Noro\"\namp_data |>\n  filter(Target == target, is.element(Extraction_kit, dilution_kits)) |>\n  plot_amp(dilution) +\n  ruler(-9, 3) +\n  facet_wrap(~Extraction_kit) +\n  labs(title = target)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 118 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 80 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-09-28-qpcr_qc_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\ntarget <- \"CrA\"\namp_data |>\n  filter(Target == target, is.element(Extraction_kit, dilution_kits)) |>\n  plot_amp(dilution) +\n  ruler(-7, 3) +\n  facet_wrap(~Extraction_kit) +\n  labs(title = target)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 76 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 80 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-09-28-qpcr_qc_files/figure-html/unnamed-chunk-12-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "2023-09-28-qpcr_qc_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}