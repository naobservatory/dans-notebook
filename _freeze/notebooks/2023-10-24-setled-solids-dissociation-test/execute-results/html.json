{
  "hash": "9619976332ec20265866f28a1e5596b1",
  "result": {
    "markdown": "---\ntitle: \"2023-10-24 Analysis of sludge dissociation test qPCR\"\nauthor: \"Dan Rice\"\ndate: 2023-10-24\ntoc: true\nformat:\n  html:\n    code-fold: false\n---\n\n## Objectives\n\nSee [Google Doc](https://docs.google.com/document/d/1p-xdPYJFIw5FudpNl-MknlrCM5OVLDtq9nfS4dbRnbQ/edit?usp=sharing)\n\n## Preliminary work\n\nExported csv files from Olivia's eds file uploads.\nAlso exported metadata google sheets as CSV\n\n## Data import\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nhere() starts at /Users/dan/notebook\n```\n:::\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(purrr)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(broom)\nlibrary(ggh4x)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nget_plate <- function(f) {\n  str_extract(basename(f),\n    \"(.*)_(.*)_[0-9]{8}_[0-9]{6}\\\\.csv\",\n    group = 1\n  )\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_dir <- here(\"~\", \"airport\")\nexperiments <- c(\"[2023-10-18] New Combined Protocol run-through\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfilename_pattern <- \"_Results_\"\ncol_types <- list(\n  Target = col_character(),\n  Cq = col_double(),\n  `Treatment Group` = col_character()\n)\nraw_data <- list.files(\n  map_chr(experiments, function(exp) {\n    here(data_dir, exp, \"qpcr\")\n  }),\n  pattern = filename_pattern,\n  recursive = TRUE,\n  full.names = TRUE,\n) |>\n  print() |>\n  map(function(f) {\n    read_csv(f, skip = 23, col_types = col_types) |>\n      mutate(plate = get_plate(f))\n  }) |>\n  list_rbind() |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"/Users/dan/airport/[2023-10-18] New Combined Protocol run-through/qpcr/2023-10-24_Cov2Noro_Results_20231024_143610.csv\"\n[2] \"/Users/dan/airport/[2023-10-18] New Combined Protocol run-through/qpcr/2023-10-24_CrA16S_Results_20231024_143657.csv\"  \n[3] \"/Users/dan/airport/[2023-10-18] New Combined Protocol run-through/qpcr/2023-10-24_PMMoV_Results_20231024_160308.csv\"   \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The following named parsers don't match the column names: Treatment\nGroup\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The following named parsers don't match the column names: Treatment\nGroup\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The following named parsers don't match the column names: Treatment\nGroup\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 223\nColumns: 22\n$ Well                    <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,…\n$ `Well Position`         <chr> \"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"A7\", \"A8\"…\n$ Omit                    <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS…\n$ Sample                  <chr> \"1A\", \"1A\", \"1A\", \"3C\", \"3C\", \"3C\", \"1A\", \"1A\"…\n$ Target                  <chr> \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\"…\n$ Task                    <chr> \"UNKNOWN\", \"UNKNOWN\", \"UNKNOWN\", \"UNKNOWN\", \"U…\n$ Reporter                <chr> \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM…\n$ Quencher                <chr> \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"N…\n$ `Amp Status`            <chr> \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP…\n$ `Amp Score`             <dbl> 1.285299, 1.261658, 1.291325, 1.307973, 1.3246…\n$ `Curve Quality`         <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ `Result Quality Issues` <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Cq                      <dbl> 33.47677, 33.83380, 33.69172, 33.08026, 32.584…\n$ `Cq Confidence`         <dbl> 0.9706938, 0.9862888, 0.9894744, 0.9870891, 0.…\n$ `Cq Mean`               <dbl> 33.66743, 33.66743, 33.66743, 32.88368, 32.883…\n$ `Cq SD`                 <dbl> 0.17974764, 0.17974764, 0.17974764, 0.26309028…\n$ `Auto Threshold`        <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ Threshold               <dbl> 0.09301463, 0.09301463, 0.09301463, 0.09301463…\n$ `Auto Baseline`         <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ `Baseline Start`        <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ `Baseline End`          <dbl> 29, 29, 29, 29, 28, 28, 24, 25, 24, 24, 24, 24…\n$ plate                   <chr> \"2023-10-24_Cov2Noro\", \"2023-10-24_Cov2Noro\", …\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmetadata_file <- here(\n  data_dir,\n  experiments[1],\n  \"metadata.csv\"\n)\nmetadata <- experiments |>\n  map(function(exp) {\n    read_csv(here(data_dir, exp, \"metadata.csv\"), col_types = col_types)\n  }) |>\n  list_rbind() |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The following named parsers don't match the column names: Target, Cq\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 9\nColumns: 12\n$ Sample_ID               <chr> \"1A\", \"1B\", \"1C\", \"2A\", \"2B\", \"2C\", \"3A\", \"3B\"…\n$ `Treatment Group`       <chr> \"1\", \"1\", \"1\", \"2\", \"2\", \"2\", \"3\", \"3\", \"3\"\n$ Dissocation             <chr> \"Vortex 5m\", \"Vortex 5m\", \"Vortex 5m\", \"Sonica…\n$ `Vortex time (min)`     <dbl> 5, 5, 5, 0, 0, 0, 1, 1, 1\n$ `Sonication time (min)` <dbl> 0, 0, 0, 1, 1, 1, 1, 1, 1\n$ CollectionDate          <date> 2023-10-17, 2023-10-17, 2023-10-17, 2023-10-17…\n$ Source                  <chr> \"Sludge\", \"Sludge\", \"Sludge\", \"Sludge\", \"Sludg…\n$ `Filtration time (sec)` <dbl> 10, 10, 10, 10, 10, 60, 15, 10, 10\n$ `CP Time`               <time> 03:37:00, 04:03:00, 04:00:00, 04:27:00, 04:00:…\n$ `Shield Added (uL)`     <dbl> 400, 400, 400, 400, 400, 400, 400, 400, 400\n$ `Qubit RNA`             <dbl> 24.2, 24.2, 18.5, 27.1, 27.7, 98.0, 100.0, 32…\n$ `Qubit DNA`             <chr> \"40\", \"36.4\", \"29.9\", \"59.2\", \"41.9\", \"97.2\", …\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data <- raw_data |>\n  separate_wider_regex(\n    `Well Position`,\n    c(well_row = \"[A-Z]+\", well_col = \"[0-9]+\"),\n    cols_remove = FALSE,\n  ) |>\n  left_join(metadata, by = join_by(Sample == Sample_ID)) |>\n  mutate(Target = if_else(Target == \"PMMV\", \"PMMoV\", Target)) |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 223\nColumns: 35\n$ Well                    <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,…\n$ well_row                <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"…\n$ well_col                <chr> \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"…\n$ `Well Position`         <chr> \"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"A7\", \"A8\"…\n$ Omit                    <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS…\n$ Sample                  <chr> \"1A\", \"1A\", \"1A\", \"3C\", \"3C\", \"3C\", \"1A\", \"1A\"…\n$ Target                  <chr> \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\"…\n$ Task                    <chr> \"UNKNOWN\", \"UNKNOWN\", \"UNKNOWN\", \"UNKNOWN\", \"U…\n$ Reporter                <chr> \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM…\n$ Quencher                <chr> \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"N…\n$ `Amp Status`            <chr> \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP…\n$ `Amp Score`             <dbl> 1.285299, 1.261658, 1.291325, 1.307973, 1.3246…\n$ `Curve Quality`         <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ `Result Quality Issues` <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Cq                      <dbl> 33.47677, 33.83380, 33.69172, 33.08026, 32.584…\n$ `Cq Confidence`         <dbl> 0.9706938, 0.9862888, 0.9894744, 0.9870891, 0.…\n$ `Cq Mean`               <dbl> 33.66743, 33.66743, 33.66743, 32.88368, 32.883…\n$ `Cq SD`                 <dbl> 0.17974764, 0.17974764, 0.17974764, 0.26309028…\n$ `Auto Threshold`        <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ Threshold               <dbl> 0.09301463, 0.09301463, 0.09301463, 0.09301463…\n$ `Auto Baseline`         <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ `Baseline Start`        <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ `Baseline End`          <dbl> 29, 29, 29, 29, 28, 28, 24, 25, 24, 24, 24, 24…\n$ plate                   <chr> \"2023-10-24_Cov2Noro\", \"2023-10-24_Cov2Noro\", …\n$ `Treatment Group`       <chr> \"1\", \"1\", \"1\", \"3\", \"3\", \"3\", \"1\", \"1\", \"1\", \"…\n$ Dissocation             <chr> \"Vortex 5m\", \"Vortex 5m\", \"Vortex 5m\", \"Vortex…\n$ `Vortex time (min)`     <dbl> 5, 5, 5, 1, 1, 1, 5, 5, 5, 1, 1, 1, 5, 5, 5, N…\n$ `Sonication time (min)` <dbl> 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, N…\n$ CollectionDate          <date> 2023-10-17, 2023-10-17, 2023-10-17, 2023-10-1…\n$ Source                  <chr> \"Sludge\", \"Sludge\", \"Sludge\", \"Sludge\", \"Sludg…\n$ `Filtration time (sec)` <dbl> 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10…\n$ `CP Time`               <time> 03:37:00, 03:37:00, 03:37:00, 04:13:00, 04:13…\n$ `Shield Added (uL)`     <dbl> 400, 400, 400, 400, 400, 400, 400, 400, 400, 4…\n$ `Qubit RNA`             <dbl> 24.2, 24.2, 24.2, 25.7, 25.7, 25.7, 24.2, 24.2…\n$ `Qubit DNA`             <chr> \"40\", \"40\", \"40\", \"29.2\", \"29.2\", \"29.2\", \"40\"…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\namp_data <- list.files(\n  map_chr(experiments, function(exp) {\n    here(data_dir, exp, \"qpcr\")\n  }),\n  pattern = \"Amplification Data\",\n  recursive = TRUE,\n  full.names = TRUE,\n) |>\n  print() |>\n  map(function(f) {\n    read_csv(f,\n      skip = 23,\n      col_types = col_types,\n    ) |>\n      mutate(plate = get_plate(f))\n  }) |>\n  list_rbind() |>\n  mutate(Target = if_else(Target == \"PMMV\", \"PMMoV\", Target)) |>\n  left_join(tidy_data,\n    by = join_by(plate, Well, `Well Position`, Sample, Omit, Target)\n  ) |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"/Users/dan/airport/[2023-10-18] New Combined Protocol run-through/qpcr/2023-10-24_Cov2Noro_Amplification Data_20231024_143610.csv\"\n[2] \"/Users/dan/airport/[2023-10-18] New Combined Protocol run-through/qpcr/2023-10-24_CrA16S_Amplification Data_20231024_143657.csv\"  \n[3] \"/Users/dan/airport/[2023-10-18] New Combined Protocol run-through/qpcr/2023-10-24_PMMoV_Amplification Data_20231024_160308.csv\"   \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The following named parsers don't match the column names: Cq, Treatment Group\nThe following named parsers don't match the column names: Cq, Treatment Group\nThe following named parsers don't match the column names: Cq, Treatment Group\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 8,920\nColumns: 38\n$ Well                    <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ `Well Position`         <chr> \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\"…\n$ `Cycle Number`          <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,…\n$ Target                  <chr> \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\"…\n$ Rn                      <dbl> 0.4810576, 0.4760514, 0.4685638, 0.4619383, 0.…\n$ dRn                     <dbl> 0.0255262889, 0.0208546813, 0.0137017026, 0.00…\n$ Sample                  <chr> \"1A\", \"1A\", \"1A\", \"1A\", \"1A\", \"1A\", \"1A\", \"1A\"…\n$ Omit                    <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS…\n$ plate                   <chr> \"2023-10-24_Cov2Noro\", \"2023-10-24_Cov2Noro\", …\n$ well_row                <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"…\n$ well_col                <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"…\n$ Task                    <chr> \"UNKNOWN\", \"UNKNOWN\", \"UNKNOWN\", \"UNKNOWN\", \"U…\n$ Reporter                <chr> \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM…\n$ Quencher                <chr> \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"N…\n$ `Amp Status`            <chr> \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP…\n$ `Amp Score`             <dbl> 1.285299, 1.285299, 1.285299, 1.285299, 1.2852…\n$ `Curve Quality`         <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ `Result Quality Issues` <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Cq                      <dbl> 33.47677, 33.47677, 33.47677, 33.47677, 33.476…\n$ `Cq Confidence`         <dbl> 0.9706938, 0.9706938, 0.9706938, 0.9706938, 0.…\n$ `Cq Mean`               <dbl> 33.66743, 33.66743, 33.66743, 33.66743, 33.667…\n$ `Cq SD`                 <dbl> 0.1797476, 0.1797476, 0.1797476, 0.1797476, 0.…\n$ `Auto Threshold`        <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ Threshold               <dbl> 0.09301463, 0.09301463, 0.09301463, 0.09301463…\n$ `Auto Baseline`         <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ `Baseline Start`        <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ `Baseline End`          <dbl> 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29…\n$ `Treatment Group`       <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"…\n$ Dissocation             <chr> \"Vortex 5m\", \"Vortex 5m\", \"Vortex 5m\", \"Vortex…\n$ `Vortex time (min)`     <dbl> 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5…\n$ `Sonication time (min)` <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ CollectionDate          <date> 2023-10-17, 2023-10-17, 2023-10-17, 2023-10-1…\n$ Source                  <chr> \"Sludge\", \"Sludge\", \"Sludge\", \"Sludge\", \"Sludg…\n$ `Filtration time (sec)` <dbl> 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10…\n$ `CP Time`               <time> 03:37:00, 03:37:00, 03:37:00, 03:37:00, 03:37…\n$ `Shield Added (uL)`     <dbl> 400, 400, 400, 400, 400, 400, 400, 400, 400, 4…\n$ `Qubit RNA`             <dbl> 24.2, 24.2, 24.2, 24.2, 24.2, 24.2, 24.2, 24.2…\n$ `Qubit DNA`             <chr> \"40\", \"40\", \"40\", \"40\", \"40\", \"40\", \"40\", \"40\"…\n```\n:::\n:::\n\n\n## Quality control\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data |> count(Task, is.na(Cq))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n  Task     `is.na(Cq)`     n\n  <chr>    <lgl>       <int>\n1 NTC      FALSE           2\n2 NTC      TRUE           11\n3 STANDARD FALSE          75\n4 UNKNOWN  FALSE         135\n```\n:::\n\n```{.r .cell-code}\ntidy_data |>\n  filter(Task == \"NTC\", !is.na(Cq)) |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 2\nColumns: 35\n$ Well                    <dbl> 82, 83\n$ well_row                <chr> \"G\", \"G\"\n$ well_col                <chr> \"10\", \"11\"\n$ `Well Position`         <chr> \"G10\", \"G11\"\n$ Omit                    <lgl> FALSE, FALSE\n$ Sample                  <chr> NA, NA\n$ Target                  <chr> \"16S\", \"16S\"\n$ Task                    <chr> \"NTC\", \"NTC\"\n$ Reporter                <chr> \"FAM\", \"FAM\"\n$ Quencher                <chr> \"NFQ-MGB\", \"NFQ-MGB\"\n$ `Amp Status`            <chr> \"AMP\", \"AMP\"\n$ `Amp Score`             <dbl> 1.322672, 1.322650\n$ `Curve Quality`         <lgl> NA, NA\n$ `Result Quality Issues` <lgl> NA, NA\n$ Cq                      <dbl> 30.11587, 30.00533\n$ `Cq Confidence`         <dbl> 0.9847199, 0.9853924\n$ `Cq Mean`               <dbl> 30.0606, 30.0606\n$ `Cq SD`                 <dbl> 0.07816425, 0.07816425\n$ `Auto Threshold`        <lgl> TRUE, TRUE\n$ Threshold               <dbl> 0.2087637, 0.2087637\n$ `Auto Baseline`         <lgl> TRUE, TRUE\n$ `Baseline Start`        <dbl> 3, 3\n$ `Baseline End`          <dbl> 24, 24\n$ plate                   <chr> \"2023-10-24_CrA16S\", \"2023-10-24_CrA16S\"\n$ `Treatment Group`       <chr> NA, NA\n$ Dissocation             <chr> NA, NA\n$ `Vortex time (min)`     <dbl> NA, NA\n$ `Sonication time (min)` <dbl> NA, NA\n$ CollectionDate          <date> NA, NA\n$ Source                  <chr> NA, NA\n$ `Filtration time (sec)` <dbl> NA, NA\n$ `CP Time`               <time> NA, NA\n$ `Shield Added (uL)`     <dbl> NA, NA\n$ `Qubit RNA`             <dbl> NA, NA\n$ `Qubit DNA`             <chr> NA, NA\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\namp_data |>\n  filter(Task == \"NTC\") |>\n  ggplot(aes(x = `Cycle Number`, y = dRn)) +\n  geom_line(mapping = aes(\n    group = Well,\n  )) +\n  geom_line(mapping = aes(\n    x = `Cycle Number`,\n    y = Threshold\n  ), color = \"Grey\") +\n  scale_y_log10(limits = c(1e-3, 1e1)) +\n  facet_wrap(~ interaction(plate, Target))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 95 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-10-24-setled-solids-dissociation-test_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nThere is the usual amplification of 16S from contamination.\n\n### All the amplification curves\n\n\n::: {.cell}\n\n```{.r .cell-code}\namp_data |>\n  ggplot(aes(x = `Cycle Number`, y = dRn)) +\n  geom_line(mapping = aes(\n    color = Task,\n    group = Well,\n  )) +\n  geom_line(mapping = aes(\n    x = `Cycle Number`,\n    y = Threshold\n  ), color = \"Grey\") +\n  scale_y_log10(limits = c(1e-3, 1e1)) +\n  facet_wrap(vars(Target))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 139 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-10-24-setled-solids-dissociation-test_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n### 16S unknowns only\n\nFigure out the one outlier curve.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data |>\n  filter(Target == \"16S\", Task == \"UNKNOWN\") |>\n  filter(Cq == max(Cq))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 35\n   Well well_row well_col `Well Position` Omit  Sample Target Task    Reporter\n  <dbl> <chr>    <chr>    <chr>           <lgl> <chr>  <chr>  <chr>   <chr>   \n1     7 A        7        A7              FALSE 1A     16S    UNKNOWN FAM     \n# ℹ 26 more variables: Quencher <chr>, `Amp Status` <chr>, `Amp Score` <dbl>,\n#   `Curve Quality` <lgl>, `Result Quality Issues` <lgl>, Cq <dbl>,\n#   `Cq Confidence` <dbl>, `Cq Mean` <dbl>, `Cq SD` <dbl>,\n#   `Auto Threshold` <lgl>, Threshold <dbl>, `Auto Baseline` <lgl>,\n#   `Baseline Start` <dbl>, `Baseline End` <dbl>, plate <chr>,\n#   `Treatment Group` <chr>, Dissocation <chr>, `Vortex time (min)` <dbl>,\n#   `Sonication time (min)` <dbl>, CollectionDate <date>, Source <chr>, …\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\namp_data |>\n  filter(Target == \"16S\", Task == \"UNKNOWN\") |>\n  ggplot(aes(x = `Cycle Number`, y = dRn)) +\n  geom_line(mapping = aes(\n    color = Well == 7,\n    group = Well,\n  )) +\n  geom_line(mapping = aes(\n    x = `Cycle Number`,\n    y = Threshold\n  ), color = \"Grey\") +\n  scale_y_log10(limits = c(1e-3, 1e1))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 31 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-10-24-setled-solids-dissociation-test_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\nThis one well looks weird:\n\n\n::: {.cell}\n\n```{.r .cell-code}\namp_data |>\n  filter(Target == \"16S\", Task == \"UNKNOWN\") |>\n  ggplot(aes(x = `Cycle Number`, y = Rn)) +\n  geom_line(mapping = aes(\n    color = Well == 7,\n    group = Well,\n  )) +\n  scale_y_log10()#limits = c(1e-3, 1e1))\n```\n\n::: {.cell-output-display}\n![](2023-10-24-setled-solids-dissociation-test_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n### PMMoV only\n\nOne technical replicate is an outlier for low Cq:\n\n\n::: {.cell}\n\n```{.r .cell-code}\namp_data |>\n  filter(Target == \"PMMoV\", Task == \"UNKNOWN\", `Treatment Group` == 3) |>\n  ggplot(aes(x = `Cycle Number`, y = dRn)) +\n  geom_line(mapping = aes(\n    color = Sample,\n    group = Well,\n  )) +\n  geom_line(mapping = aes(\n    x = `Cycle Number`,\n    y = Threshold\n  ), color = \"Grey\") +\n  scale_y_log10(limits = c(1e-3, 1e1))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 45 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-10-24-setled-solids-dissociation-test_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nAmp curve looks ok\n\n## Compare methods\n\nUsing `ggh4x` to fix the scales to have the same spacing.\nCurrently doing manually, but should automate.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscales <- list(\n               scale_x_continuous(limits=c(21,24)),\n               scale_x_continuous(limits=c(32,35)),\n               scale_x_continuous(limits=c(21,24)),\n               scale_x_continuous(limits=c(27,30)),\n               scale_x_continuous(limits=c(22,25))\n               )\ntidy_data |>\n  filter(Task == \"UNKNOWN\") |>\n  ggplot(mapping = aes(\n    x = Cq,\n    y = Dissocation,\n    group = Sample,\n  )) +\n  stat_summary(\n    fun.min = min,\n    fun.max = max,\n    fun = median,\n    position = position_dodge(width = 0.2),\n    size = 0.2\n  ) +\n  facet_wrap(facets = ~Target, scales = \"free_x\") +\n  facetted_pos_scales(x = scales)\n```\n\n::: {.cell-output-display}\n![](2023-10-24-setled-solids-dissociation-test_files/figure-html/unnamed-chunk-15-1.png){width=768}\n:::\n:::\n",
    "supporting": [
      "2023-10-24-setled-solids-dissociation-test_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}