{
  "hash": "f4dafec0cde5e1b9ce5605143ed710c5",
  "result": {
    "markdown": "---\ntitle: \"2023-10-11 Analyze qPCR standard curves\"\nauthor: \"Dan Rice\"\ndate: 2023-10-11\ntoc: true\nformat:\n  html:\n    code-fold: false\n---\n\n## Objectives\n\nTest out the standard curves from [qPCR standard curve troubleshooting](https://docs.google.com/document/d/1QgVDCbxCimTYreh9c-vcOzAPWFt76mInmhXw5uPrevc/edit?usp=sharing).\n\n## Preliminary work\n\nExported csv files from Olivia's eds file uploads.\n\n## Data import\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nhere() starts at /Users/dan/notebook\n```\n:::\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(purrr)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(broom)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_dir <-\n  here(\"~\", \"airport\", \"[2023-10-05] qPCR standard curve troubleshooting\")\nfilename_pattern <- \"_Results_\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncol_types <- list(\n  Target = col_character(),\n  Cq = col_double()\n)\nraw_data <- list.files(\n  here(data_dir, \"qpcr\"),\n  pattern = filename_pattern,\n  recursive = TRUE,\n  full.names = TRUE,\n) |>\n  print() |>\n  map(function(f) {\n    read_csv(f,\n      skip = 23,\n      col_types = col_types,\n    )\n  }) |>\n  list_rbind()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"/Users/dan/airport/[2023-10-05] qPCR standard curve troubleshooting/qpcr/2023-10-05_StdCurve_CalTest_Results_20231012_125325.csv\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n:::\n\n```{.r .cell-code}\nprint(raw_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 69 × 21\n    Well `Well Position` Omit  Sample Target Task     Reporter Quencher\n   <dbl> <chr>           <lgl>  <dbl> <chr>  <chr>    <chr>    <chr>   \n 1     1 A1              FALSE 100000 Cov2   STANDARD FAM      NFQ-MGB \n 2     2 A2              FALSE 100000 Cov2   STANDARD FAM      NFQ-MGB \n 3     3 A3              FALSE 100000 Cov2   STANDARD FAM      NFQ-MGB \n 4     5 A5              FALSE 100000 Noro   STANDARD FAM      NFQ-MGB \n 5     6 A6              FALSE 100000 Noro   STANDARD FAM      NFQ-MGB \n 6     7 A7              FALSE 100000 Noro   STANDARD FAM      NFQ-MGB \n 7     9 A9              FALSE 800000 PMMoV  STANDARD VIC      NFQ-MGB \n 8    10 A10             FALSE 800000 PMMoV  STANDARD VIC      NFQ-MGB \n 9    11 A11             FALSE 800000 PMMoV  STANDARD VIC      NFQ-MGB \n10    13 B1              FALSE  10000 Cov2   STANDARD FAM      NFQ-MGB \n# ℹ 59 more rows\n# ℹ 13 more variables: `Amp Status` <chr>, `Amp Score` <dbl>,\n#   `Curve Quality` <lgl>, `Result Quality Issues` <lgl>, Cq <dbl>,\n#   `Cq Confidence` <dbl>, `Cq Mean` <dbl>, `Cq SD` <dbl>,\n#   `Auto Threshold` <lgl>, Threshold <dbl>, `Auto Baseline` <lgl>,\n#   `Baseline Start` <dbl>, `Baseline End` <dbl>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nraw_data |> count(Target)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  Target     n\n  <chr>  <int>\n1 Cov2      24\n2 Noro      21\n3 PMMoV     24\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data <- raw_data |>\n  mutate(\n    # group = str_extract(Sample, \"^[0-9]\"),\n    # replicate = str_extract(Sample, \"[A-Z]$\"),\n    quantity = as.double(Sample),\n  ) |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 69\nColumns: 22\n$ Well                    <dbl> 1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15, 17, 1…\n$ `Well Position`         <chr> \"A1\", \"A2\", \"A3\", \"A5\", \"A6\", \"A7\", \"A9\", \"A10…\n$ Omit                    <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS…\n$ Sample                  <dbl> 1e+05, 1e+05, 1e+05, 1e+05, 1e+05, 1e+05, 8e+0…\n$ Target                  <chr> \"Cov2\", \"Cov2\", \"Cov2\", \"Noro\", \"Noro\", \"Noro\"…\n$ Task                    <chr> \"STANDARD\", \"STANDARD\", \"STANDARD\", \"STANDARD\"…\n$ Reporter                <chr> \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"VIC…\n$ Quencher                <chr> \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"N…\n$ `Amp Status`            <chr> \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP…\n$ `Amp Score`             <dbl> 1.336953, 1.342341, 1.346511, 1.543840, 1.5263…\n$ `Curve Quality`         <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ `Result Quality Issues` <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Cq                      <dbl> 19.98854, 20.39666, 21.45209, 25.67237, 27.788…\n$ `Cq Confidence`         <dbl> 0.9907778, 0.9907965, 0.9919563, 0.9951665, 0.…\n$ `Cq Mean`               <dbl> 20.61243, 20.61243, 20.61243, 26.99896, 26.998…\n$ `Cq SD`                 <dbl> 0.75525700, 0.75525700, 0.75525700, 1.15574184…\n$ `Auto Threshold`        <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ Threshold               <dbl> 0.1399036, 0.1399036, 0.1399036, 0.2375444, 0.…\n$ `Auto Baseline`         <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ `Baseline Start`        <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ `Baseline End`          <dbl> 15, 15, 16, 20, 21, 22, 16, 16, 16, 18, 18, 20…\n$ quantity                <dbl> 1e+05, 1e+05, 1e+05, 1e+05, 1e+05, 1e+05, 8e+0…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\namp_data <- list.files(\n  here(data_dir, \"qpcr\"),\n  pattern = \"Amplification Data\",\n  recursive = TRUE,\n  full.names = TRUE,\n) |>\n  print() |>\n  map(function(f) {\n    read_csv(f,\n      skip = 23,\n      col_types = col_types,\n    )\n  }) |>\n  list_rbind() |>\n  left_join(tidy_data, by = join_by(Well, `Well Position`, Sample, Omit, Target)) |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"/Users/dan/airport/[2023-10-05] qPCR standard curve troubleshooting/qpcr/2023-10-05_StdCurve_CalTest_Amplification Data_20231012_125325.csv\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The following named parsers don't match the column names: Cq\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 2,760\nColumns: 25\n$ Well                    <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ `Well Position`         <chr> \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\"…\n$ `Cycle Number`          <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,…\n$ Target                  <chr> \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\"…\n$ Rn                      <dbl> 0.6318336, 0.6287087, 0.6199436, 0.6148189, 0.…\n$ dRn                     <dbl> 0.0186775648, 0.0154212920, 0.0065248104, 0.00…\n$ Sample                  <dbl> 1e+05, 1e+05, 1e+05, 1e+05, 1e+05, 1e+05, 1e+0…\n$ Omit                    <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS…\n$ Task                    <chr> \"STANDARD\", \"STANDARD\", \"STANDARD\", \"STANDARD\"…\n$ Reporter                <chr> \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM…\n$ Quencher                <chr> \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"N…\n$ `Amp Status`            <chr> \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP…\n$ `Amp Score`             <dbl> 1.336953, 1.336953, 1.336953, 1.336953, 1.3369…\n$ `Curve Quality`         <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ `Result Quality Issues` <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Cq                      <dbl> 19.98854, 19.98854, 19.98854, 19.98854, 19.988…\n$ `Cq Confidence`         <dbl> 0.9907778, 0.9907778, 0.9907778, 0.9907778, 0.…\n$ `Cq Mean`               <dbl> 20.61243, 20.61243, 20.61243, 20.61243, 20.612…\n$ `Cq SD`                 <dbl> 0.755257, 0.755257, 0.755257, 0.755257, 0.7552…\n$ `Auto Threshold`        <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ Threshold               <dbl> 0.1399036, 0.1399036, 0.1399036, 0.1399036, 0.…\n$ `Auto Baseline`         <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ `Baseline Start`        <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ `Baseline End`          <dbl> 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15…\n$ quantity                <dbl> 1e+05, 1e+05, 1e+05, 1e+05, 1e+05, 1e+05, 1e+0…\n```\n:::\n:::\n\n\n## Standard curves\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data |>\n  filter(Task == \"STANDARD\") |>\n  ggplot(mapping = aes(\n    x = quantity,\n    y = Cq,\n  )) +\n  stat_summary(\n    fun.min = min,\n    fun.max = max,\n    fun = median,\n    position = position_dodge(width = 0.2),\n    size = 0.2\n  ) +\n  scale_x_log10() +\n  geom_smooth(method = \"lm\") +\n  facet_wrap(facets = ~Target, scales = \"free\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 6 rows containing non-finite values (`stat_summary()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 6 rows containing non-finite values (`stat_smooth()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-10-11-qpcr_standard_curvs_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfits <- tibble()\n# Note: no standard for norovirus\nfor (target in unique(tidy_data$Target)) {\n  fit <- lm(Cq ~ log10(quantity),\n    data = filter(tidy_data, Task == \"STANDARD\", Target == target)\n  ) |>\n    tidy() |>\n    mutate(Target = target, efficiency = 10^-(1 / estimate) - 1)\n  fits <- bind_rows(fits, fit)\n}\nprint(fits |> filter(term == \"log10(quantity)\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 7\n  term            estimate std.error statistic  p.value Target efficiency\n  <chr>              <dbl>     <dbl>     <dbl>    <dbl> <chr>       <dbl>\n1 log10(quantity)    -2.89    0.103      -28.0 2.69e-16 Cov2         1.22\n2 log10(quantity)    -2.42    0.180      -13.4 1.37e- 8 Noro         1.59\n3 log10(quantity)    -3.00    0.0535     -56.0 1.18e-21 PMMoV        1.15\n```\n:::\n:::\n\n\nNotes:\n\n* PMMoV looks fine. Efficiency is a bit high and lowest concentration point is a bit noisy, but basically good.\n* Norovirus looks messy and efficiency is way too high.\n* Cov2 is intermediate\n\n## Amplification curves\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_amp <- function(data, color) {\n  ggplot(data, aes(x = `Cycle Number`, y = dRn)) +\n    geom_line(mapping = aes(\n      color = as.factor({{ color }}),\n      group = Well,\n    )) +\n    scale_y_log10(limits = c(1e-3, 1e1))\n}\n\nruler <- function(y0_from, num_rules) {\n  y0 <- 10^seq(from = y0_from, by = -1, length.out = num_rules)\n  rules <- crossing(`Cycle Number` = amp_data$`Cycle Number`, y0 = y0) |>\n    mutate(y = y0 * 2^`Cycle Number`)\n  geom_line(\n    data = rules,\n    mapping = aes(y = y, group = y0),\n    color = \"black\"\n  )\n}\n\nplot_amp_with_ruler <- function(target, y0_from, num_rules) {\n  amp_data |>\n    filter(!is.na(quantity), Target == target) |>\n    plot_amp(quantity) +\n    ruler(y0_from, num_rules) +\n    geom_line(mapping = aes(\n      x = `Cycle Number`,\n      y = Threshold\n    ), color = \"Grey\") +\n    labs(title = target)\n}\n```\n:::\n\n\n### PMMoV\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_amp_with_ruler(\"PMMoV\", -7, 7)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 131 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 196 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-10-11-qpcr_standard_curvs_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nCurves look pretty clean (maybe a little steep) but the spacing is off on the dilutions.\nThey look a bit under-diluted, which would explain the slightly too large efficiency.\n\n### SARS-CoV-2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_amp_with_ruler(\"Cov2\", -7, 7)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 50 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 196 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-10-11-qpcr_standard_curvs_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nCurves are not as consistent as PMMoV and spacing is still too narrow. Slopes look ok.\n\n### Norovirus\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_amp_with_ruler(\"Noro\", -8.5, 6)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 100 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 173 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-10-11-qpcr_standard_curvs_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nLook really messy. Not spaced properly.\nPossibly have a slow phase and then a faster phase.\nCould this be because the PCR template doesn't match the standard?\n\n## Raw Rn\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_rn <- function(data, target) {\n  data |>\n    filter(Task == \"STANDARD\", Target == target) |>\n    ggplot(aes(x = `Cycle Number`, y = Rn)) +\n    geom_line(mapping = aes(\n      color = as.factor(quantity),\n      group = Well,\n    )) +\n    scale_y_log10() +\n    labs(title = target)\n}\n```\n:::\n\n\nDon't really know what to make of these:\n\n\n::: {.cell}\n\n```{.r .cell-code}\namp_data |> plot_rn(\"PMMoV\")\n```\n\n::: {.cell-output-display}\n![](2023-10-11-qpcr_standard_curvs_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\namp_data |> plot_rn(\"Cov2\")\n```\n\n::: {.cell-output-display}\n![](2023-10-11-qpcr_standard_curvs_files/figure-html/unnamed-chunk-14-2.png){width=672}\n:::\n\n```{.r .cell-code}\namp_data |> plot_rn(\"Noro\")\n```\n\n::: {.cell-output-display}\n![](2023-10-11-qpcr_standard_curvs_files/figure-html/unnamed-chunk-14-3.png){width=672}\n:::\n:::\n\n\n### NTC\n\n\n::: {.cell}\n\n```{.r .cell-code}\namp_data |>\n  filter(Task == \"NTC\") |>\n  ggplot(aes(x = `Cycle Number`, y = Rn)) +\n  geom_line(mapping = aes(color = Target, group = Well))\n```\n\n::: {.cell-output-display}\n![](2023-10-11-qpcr_standard_curvs_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "2023-10-11-qpcr_standard_curvs_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}