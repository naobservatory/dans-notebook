{
  "hash": "97b0c4cfd0a3242d7cb012240c3d4a96",
  "result": {
    "markdown": "---\ntitle: \"2023-10-10 Analyze prefilter experiment qPCR\"\nauthor: \"Dan Rice\"\ndate: 2023-10-10\ntoc: true\nformat:\n  html:\n    code-fold: false\n---\n\n## Objectives\n\nDetermine which prefiltration method produces better nucleic acid results.\n\n## Preliminary work\n\nExported csv files from Olivia's eds file uploads.\n\n## Data import\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nhere() starts at /Users/dan/notebook\n```\n:::\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(purrr)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(broom)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_dir <-\n  here(\"~\", \"airport\", \"[2023-09-22] New Processing Tests\")\nfilename_pattern <- \"_Results_\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncol_types <- list(\n  Target = col_character(),\n  Cq = col_double()\n)\nraw_data <- list.files(\n  here(data_dir, \"qpcr\"),\n  pattern = filename_pattern,\n  recursive = TRUE,\n  full.names = TRUE,\n) |>\n  print() |>\n  map(function(f) {\n    read_csv(f,\n      skip = 23,\n      col_types = col_types,\n    )\n  }) |>\n  list_rbind()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"/Users/dan/airport/[2023-09-22] New Processing Tests/qpcr/2023-10-09_Cov2_PMMV_Results_20231010_125053.csv\"\n[2] \"/Users/dan/airport/[2023-09-22] New Processing Tests/qpcr/2023-10-09_CrA_16S_Results_20231010_125152.csv\"  \n[3] \"/Users/dan/airport/[2023-09-22] New Processing Tests/qpcr/2023-10-09_Noro_Results_20231010_125241.csv\"     \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n:::\n\n```{.r .cell-code}\nprint(raw_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 165 × 21\n    Well `Well Position` Omit  Sample   Target Task     Reporter Quencher\n   <dbl> <chr>           <lgl> <chr>    <chr>  <chr>    <chr>    <chr>   \n 1     1 A1              FALSE 1A       Cov2   UNKNOWN  FAM      NFQ-MGB \n 2     2 A2              FALSE 1A       Cov2   UNKNOWN  FAM      NFQ-MGB \n 3     3 A3              FALSE 1A       Cov2   UNKNOWN  FAM      NFQ-MGB \n 4     4 A4              FALSE 10000.0  Cov2   STANDARD FAM      NFQ-MGB \n 5     5 A5              FALSE 10000.0  Cov2   STANDARD FAM      NFQ-MGB \n 6     6 A6              FALSE 10000.0  Cov2   STANDARD FAM      NFQ-MGB \n 7     7 A7              FALSE 1A       PMMV   UNKNOWN  FAM      NFQ-MGB \n 8     8 A8              FALSE 1A       PMMV   UNKNOWN  FAM      NFQ-MGB \n 9     9 A9              FALSE 1A       PMMV   UNKNOWN  FAM      NFQ-MGB \n10    10 A10             FALSE 800000.0 PMMV   STANDARD FAM      NFQ-MGB \n# ℹ 155 more rows\n# ℹ 13 more variables: `Amp Status` <chr>, `Amp Score` <dbl>,\n#   `Curve Quality` <lgl>, `Result Quality Issues` <lgl>, Cq <dbl>,\n#   `Cq Confidence` <dbl>, `Cq Mean` <dbl>, `Cq SD` <dbl>,\n#   `Auto Threshold` <lgl>, Threshold <dbl>, `Auto Baseline` <lgl>,\n#   `Baseline Start` <dbl>, `Baseline End` <dbl>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nraw_data |> count(Target)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n  Target     n\n  <chr>  <int>\n1 16S       36\n2 Cov2      36\n3 CrA       36\n4 Noro      21\n5 PMMV      36\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data <- raw_data |>\n  mutate(\n    group = str_extract(Sample, \"^[0-9]\"),\n    replicate = str_extract(Sample, \"[A-Z]$\"),\n    quantity = as.double(Sample),\n  ) |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `quantity = as.double(Sample)`.\nCaused by warning:\n! NAs introduced by coercion\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 165\nColumns: 24\n$ Well                    <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,…\n$ `Well Position`         <chr> \"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"A7\", \"A8\"…\n$ Omit                    <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS…\n$ Sample                  <chr> \"1A\", \"1A\", \"1A\", \"10000.0\", \"10000.0\", \"10000…\n$ Target                  <chr> \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\"…\n$ Task                    <chr> \"UNKNOWN\", \"UNKNOWN\", \"UNKNOWN\", \"STANDARD\", \"…\n$ Reporter                <chr> \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM…\n$ Quencher                <chr> \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"N…\n$ `Amp Status`            <chr> \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP…\n$ `Amp Score`             <dbl> 1.3915582, 1.4014582, 1.4073581, 1.4090574, 1.…\n$ `Curve Quality`         <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ `Result Quality Issues` <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Cq                      <dbl> 33.15919, 32.98389, 32.66178, 22.39386, 22.220…\n$ `Cq Confidence`         <dbl> 0.9759085, 0.9891340, 0.9883204, 0.9891666, 0.…\n$ `Cq Mean`               <dbl> 32.93495, 32.93495, 32.93495, 22.31821, 22.318…\n$ `Cq SD`                 <dbl> 0.25229116, 0.25229116, 0.25229116, 0.08875503…\n$ `Auto Threshold`        <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ Threshold               <dbl> 0.2999157, 0.2999157, 0.2999157, 0.2999157, 0.…\n$ `Auto Baseline`         <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ `Baseline Start`        <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ `Baseline End`          <dbl> 27, 27, 26, 16, 16, 16, 24, 23, 23, 20, 20, 19…\n$ group                   <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"…\n$ replicate               <chr> \"A\", \"A\", \"A\", NA, NA, NA, \"A\", \"A\", \"A\", NA, …\n$ quantity                <dbl> NA, NA, NA, 1e+04, 1e+04, 1e+04, NA, NA, NA, 8…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\namp_data <- list.files(\n  here(data_dir, \"qpcr\"),\n  pattern = \"Amplification Data\",\n  recursive = TRUE,\n  full.names = TRUE,\n) |>\n  print() |>\n  map(function(f) {\n    read_csv(f,\n      skip = 23,\n      col_types = col_types,\n    )\n  }) |>\n  list_rbind() |>\n  left_join(tidy_data, by = join_by(Well, `Well Position`, Sample, Omit, Target)) |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"/Users/dan/airport/[2023-09-22] New Processing Tests/qpcr/2023-10-09_Cov2_PMMV_Amplification Data_20231010_125053.csv\"\n[2] \"/Users/dan/airport/[2023-09-22] New Processing Tests/qpcr/2023-10-09_CrA_16S_Amplification Data_20231010_125152.csv\"  \n[3] \"/Users/dan/airport/[2023-09-22] New Processing Tests/qpcr/2023-10-09_Noro_Amplification Data_20231010_125241.csv\"     \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The following named parsers don't match the column names: Cq\nThe following named parsers don't match the column names: Cq\nThe following named parsers don't match the column names: Cq\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 6,600\nColumns: 27\n$ Well                    <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ `Well Position`         <chr> \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\"…\n$ `Cycle Number`          <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,…\n$ Target                  <chr> \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\"…\n$ Rn                      <dbl> 0.6443956, 0.6382574, 0.6284555, 0.6179680, 0.…\n$ dRn                     <dbl> 2.836028e-02, 2.374099e-02, 1.545804e-02, 6.48…\n$ Sample                  <chr> \"1A\", \"1A\", \"1A\", \"1A\", \"1A\", \"1A\", \"1A\", \"1A\"…\n$ Omit                    <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS…\n$ Task                    <chr> \"UNKNOWN\", \"UNKNOWN\", \"UNKNOWN\", \"UNKNOWN\", \"U…\n$ Reporter                <chr> \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM…\n$ Quencher                <chr> \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"N…\n$ `Amp Status`            <chr> \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP…\n$ `Amp Score`             <dbl> 1.391558, 1.391558, 1.391558, 1.391558, 1.3915…\n$ `Curve Quality`         <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ `Result Quality Issues` <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Cq                      <dbl> 33.15919, 33.15919, 33.15919, 33.15919, 33.159…\n$ `Cq Confidence`         <dbl> 0.9759085, 0.9759085, 0.9759085, 0.9759085, 0.…\n$ `Cq Mean`               <dbl> 32.93495, 32.93495, 32.93495, 32.93495, 32.934…\n$ `Cq SD`                 <dbl> 0.2522912, 0.2522912, 0.2522912, 0.2522912, 0.…\n$ `Auto Threshold`        <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ Threshold               <dbl> 0.2999157, 0.2999157, 0.2999157, 0.2999157, 0.…\n$ `Auto Baseline`         <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ `Baseline Start`        <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ `Baseline End`          <dbl> 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27…\n$ group                   <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"…\n$ replicate               <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"…\n$ quantity                <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n```\n:::\n:::\n\n\nGroups 1 and 2 are two different prefiltration protocols.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data |>\n  count(group, Target, replicate) |>\n  print(n = Inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 40 × 4\n   group Target replicate     n\n   <chr> <chr>  <chr>     <int>\n 1 0     16S    <NA>          9\n 2 1     16S    A             3\n 3 1     16S    B             3\n 4 1     16S    C             3\n 5 1     16S    <NA>          6\n 6 1     Cov2   A             3\n 7 1     Cov2   B             3\n 8 1     Cov2   C             3\n 9 1     Cov2   <NA>         15\n10 1     CrA    A             3\n11 1     CrA    B             3\n12 1     CrA    C             3\n13 1     CrA    <NA>         15\n14 1     Noro   A             3\n15 1     Noro   B             3\n16 1     Noro   C             3\n17 1     PMMV   A             3\n18 1     PMMV   B             3\n19 1     PMMV   C             3\n20 2     16S    A             3\n21 2     16S    B             3\n22 2     16S    C             3\n23 2     Cov2   A             3\n24 2     Cov2   B             3\n25 2     Cov2   C             3\n26 2     CrA    A             3\n27 2     CrA    B             3\n28 2     CrA    C             3\n29 2     Noro   A             3\n30 2     Noro   B             3\n31 2     Noro   C             3\n32 2     PMMV   A             3\n33 2     PMMV   B             3\n34 2     PMMV   C             3\n35 8     PMMV   <NA>         15\n36 <NA>  16S    <NA>          3\n37 <NA>  Cov2   <NA>          3\n38 <NA>  CrA    <NA>          3\n39 <NA>  Noro   <NA>          3\n40 <NA>  PMMV   <NA>          3\n```\n:::\n:::\n\n\n## Kit comparison\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data |>\n  filter(Task == \"UNKNOWN\") |>\n  ggplot(mapping = aes(\n    x = Cq,\n    y = group,\n    color = replicate,\n  )) +\n  stat_summary(\n    fun.min = min,\n    fun.max = max,\n    fun = median,\n    position = position_dodge(width = 0.2),\n    size = 0.2\n  ) +\n  facet_wrap(facets = ~Target, scales = \"free_x\")\n```\n\n::: {.cell-output-display}\n![](2023-10-10-qpcr_analysis_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## Standard curves\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data |>\n  filter(Task == \"STANDARD\") |>\n  ggplot(mapping = aes(\n    x = quantity,\n    y = Cq,\n  )) +\n  stat_summary(\n    fun.min = min,\n    fun.max = max,\n    fun = median,\n    position = position_dodge(width = 0.2),\n    size = 0.2\n  ) +\n  scale_x_log10() +\n  geom_smooth(method = \"lm\") +\n  facet_wrap(facets = ~Target, scales = \"free\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](2023-10-10-qpcr_analysis_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfits <- tibble()\n# Note: no standard for norovirus\nfor (target in c(\"16S\", \"Cov2\", \"CrA\", \"PMMV\")) {\n  fit <- lm(Cq ~ log10(quantity),\n    data = filter(tidy_data, Task == \"STANDARD\", Target == target)\n  ) |>\n    tidy() |>\n    mutate(Target = target, efficiency = 10^-(1 / estimate) - 1)\n  fits <- bind_rows(fits, fit)\n}\nprint(fits |> filter(term == \"log10(quantity)\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 7\n  term            estimate std.error statistic  p.value Target efficiency\n  <chr>              <dbl>     <dbl>     <dbl>    <dbl> <chr>       <dbl>\n1 log10(quantity)    -2.92    0.125      -23.3 5.44e-12 16S          1.20\n2 log10(quantity)    -2.54    0.121      -21.1 1.99e-11 Cov2         1.47\n3 log10(quantity)    -2.84    0.0806     -35.3 2.69e-14 CrA          1.25\n4 log10(quantity)    -2.72    0.0829     -32.8 6.90e-14 PMMV         1.33\n```\n:::\n:::\n\n\n## Amplification curves\n\n\n::: {.cell}\n\n```{.r .cell-code}\namp_data |>\n  filter(Task == \"UNKNOWN\") |>\n  ggplot(mapping = aes(\n    x = `Cycle Number`,\n    y = dRn,\n    color = as.factor(group),\n    group = Well\n  )) +\n  geom_line() +\n  geom_line(mapping = aes(\n    x = `Cycle Number`,\n    y = Threshold\n  ), color = \"Grey\") +\n  scale_y_log10() +\n  facet_wrap(~Target, scales = \"free\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 49 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-10-10-qpcr_analysis_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\namp_data |>\n  filter(Task == \"NTC\") |>\n  ggplot(mapping = aes(\n    x = `Cycle Number`,\n    y = dRn,\n    group = Well\n  )) +\n  geom_line() +\n  geom_line(mapping = aes(\n    x = `Cycle Number`,\n    y = Threshold\n  ), color = \"Grey\") +\n  scale_y_log10() +\n  facet_wrap(~Target, scales = \"free\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 149 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-10-10-qpcr_analysis_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_amp <- function(data, color) {\n  ggplot(data, aes(x = `Cycle Number`, y = dRn)) +\n    geom_line(mapping = aes(\n      color = as.factor({{ color }}),\n      group = Well,\n    )) +\n    scale_y_log10(limits = c(1e-3, 1e1))\n}\n\nruler <- function(y0_from, num_rules) {\n  y0 <- 10^seq(from = y0_from, by = -1, length.out = num_rules)\n  rules <- crossing(`Cycle Number` = amp_data$`Cycle Number`, y0 = y0) |>\n    mutate(dRn = y0 * 2^`Cycle Number`)\n  geom_line(\n    data = rules,\n    mapping = aes(group = y0),\n    color = \"black\"\n  )\n}\n\nplot_amp_with_ruler <- function(target, y0_from, num_rules) {\n  amp_data |>\n    filter(!is.na(quantity), Target == target) |>\n    plot_amp(quantity) +\n    ruler(y0_from, num_rules) +\n    geom_line(mapping = aes(\n      x = `Cycle Number`,\n      y = Threshold\n    ), color = \"Grey\") +\n    labs(title = target)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_amp_with_ruler(\"16S\", -5.5, 5)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 51 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 134 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-10-10-qpcr_analysis_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot_amp_with_ruler(\"Cov2\", -6.5, 5)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 133 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-10-10-qpcr_analysis_files/figure-html/unnamed-chunk-14-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot_amp_with_ruler(\"CrA\", -4.5, 5)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 34 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 133 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-10-10-qpcr_analysis_files/figure-html/unnamed-chunk-14-3.png){width=672}\n:::\n\n```{.r .cell-code}\nplot_amp_with_ruler(\"PMMV\", -8, 5)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 51 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 136 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-10-10-qpcr_analysis_files/figure-html/unnamed-chunk-14-4.png){width=672}\n:::\n:::\n",
    "supporting": [
      "2023-10-10-qpcr_analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}