{
  "hash": "e1688bf98d04f853f7f300f01e5a991c",
  "result": {
    "markdown": "---\ntitle: \"2023-09-13 Extraction Experiment 2 qPCR Analysis\"\nauthor: \"Dan Rice\"\ndate: 2023-09-15\ntoc: true\nformat:\n  html:\n    code-fold: false\n---\n\n## Objectives\n\nTesting the efficacy of RNA extraction kits in settled solid samples.\nSee [experiment google doc](https://docs.google.com/document/d/1Po6eE3LHc9svHC4yfnDak-B-sKa7o1Pc1noFMoSbFSE/edit?usp=sharing).\n\n## Preliminary work\n\n- Olivia put the `.eds` files in `NAO qPCR data/Olivia` on Google Drive and shared the folder with Dan.\n- Google Drive for desktop only syncs shared drives, not shared folders in other drives, so Dan figured out a work around. He made a shortcut to the shared folder in his own google drive so it would sync locally.\n- Opened up the `.eds` files in Design and Analysis locally and exported to `.csv` and saved those in the airport experiment folder on the main google drive.\n- Found a Google Sheet with metadata, downloaded as CSV and added the CSV back to the Google Drive\n\n## Data import\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(purrr)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(broom)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_dir <-\n  \"~/airport/[2023-09-06] Extraction-kit comparison 2: Settled Solids/\"\nfilename_pattern <- \"Results\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncol_types <- list(\n  Target = col_character(),\n  Cq = col_double()\n)\nraw_data <- list.files(\n  paste0(data_dir, \"qpcr\"),\n  pattern = filename_pattern,\n  full.names = TRUE,\n) |>\n  print() |>\n  map(function(f) {\n    read_csv(f,\n      skip = 23,\n      col_types = col_types,\n    )\n  }) |>\n  list_rbind()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"/Users/dan/airport/[2023-09-06] Extraction-kit comparison 2: Settled Solids/qpcr/2023-09-14_Cov2_extractions_Results_20230915_100200.csv\"\n[2] \"/Users/dan/airport/[2023-09-06] Extraction-kit comparison 2: Settled Solids/qpcr/2023-09-14_Noro_Extractions_Results_20230915_100255.csv\"\n[3] \"/Users/dan/airport/[2023-09-06] Extraction-kit comparison 2: Settled Solids/qpcr/2023-09-15_CrA_extractions_Results_20230915_105855.csv\" \n[4] \"/Users/dan/airport/[2023-09-06] Extraction-kit comparison 2: Settled Solids/qpcr/2023-09-18_16S_extractions_Results_20230918_151203.csv\" \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n:::\n\n```{.r .cell-code}\nprint(raw_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 369 × 21\n    Well `Well Position` Omit  Sample Target Task     Reporter Quencher\n   <dbl> <chr>           <lgl> <chr>  <chr>  <chr>    <chr>    <chr>   \n 1     1 A1              FALSE 1A     Cov2   UNKNOWN  FAM      NFQ-MGB \n 2     2 A2              FALSE 1A     Cov2   UNKNOWN  FAM      NFQ-MGB \n 3     3 A3              FALSE 1A     Cov2   UNKNOWN  FAM      NFQ-MGB \n 4     4 A4              FALSE 3C     Cov2   UNKNOWN  FAM      NFQ-MGB \n 5     5 A5              FALSE 3C     Cov2   UNKNOWN  FAM      NFQ-MGB \n 6     6 A6              FALSE 3C     Cov2   UNKNOWN  FAM      NFQ-MGB \n 7     7 A7              FALSE 6B     Cov2   UNKNOWN  FAM      NFQ-MGB \n 8     8 A8              FALSE 6B     Cov2   UNKNOWN  FAM      NFQ-MGB \n 9     9 A9              FALSE 6B     Cov2   UNKNOWN  FAM      NFQ-MGB \n10    10 A10             FALSE 1000.0 Cov2   STANDARD FAM      NFQ-MGB \n# ℹ 359 more rows\n# ℹ 13 more variables: `Amp Status` <chr>, `Amp Score` <dbl>,\n#   `Curve Quality` <lgl>, `Result Quality Issues` <lgl>, Cq <dbl>,\n#   `Cq Confidence` <dbl>, `Cq Mean` <dbl>, `Cq SD` <dbl>,\n#   `Auto Threshold` <lgl>, Threshold <dbl>, `Auto Baseline` <lgl>,\n#   `Baseline Start` <dbl>, `Baseline End` <dbl>\n```\n:::\n:::\n\n\nThere were some wells mixed up between the intended plate layout and\nthe actual plate for Norovirus. See [Results doc](https://docs.google.com/document/d/1tW-D4xxeYafqgjE4Sw0WGtCAkgf_qGxNhoWq2x7zHY4/edit#bookmark=id.jgbgdox3hte1).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncorrected_samples <- tribble(\n  ~`Well Position`, ~Sample,\n  \"F7\",             \"empty\",\n  \"F8\",             \"empty\",\n  \"F9\",             \"empty\",\n  \"F10\",            \"empty\",\n  \"F11\",            \"empty\",\n  \"F12\",            \"empty\",\n  \"G7\",             \"6C/100\",\n  \"G8\",             \"6C/10\",\n  \"G9\",             \"7C/100\",\n  \"G10\",            \"7C/10\",\n  \"G11\",            \"3C/100\",\n  \"G12\",            \"3C/10\",\n  \"H7\",             \"1C/100\",\n  \"H8\",             \"1C/10\",\n  \"H9\",             \"1C/100\",\n  \"H10\",            \"1C/10\",\n  \"H11\",            \"NTC\",\n  \"H12\",            \"NTC\",\n)\ncorrected_samples$Target <- \"Noro\"\nprint(corrected_samples)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 18 × 3\n   `Well Position` Sample Target\n   <chr>           <chr>  <chr> \n 1 F7              empty  Noro  \n 2 F8              empty  Noro  \n 3 F9              empty  Noro  \n 4 F10             empty  Noro  \n 5 F11             empty  Noro  \n 6 F12             empty  Noro  \n 7 G7              6C/100 Noro  \n 8 G8              6C/10  Noro  \n 9 G9              7C/100 Noro  \n10 G10             7C/10  Noro  \n11 G11             3C/100 Noro  \n12 G12             3C/10  Noro  \n13 H7              1C/100 Noro  \n14 H8              1C/10  Noro  \n15 H9              1C/100 Noro  \n16 H10             1C/10  Noro  \n17 H11             NTC    Noro  \n18 H12             NTC    Noro  \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncorrected_raw_data <- raw_data |>\n  left_join(corrected_samples, by = join_by(`Well Position`, Target)) |>\n  mutate(Sample = ifelse(is.na(Sample.y), Sample.x, Sample.y)) |>\n  print()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 369 × 23\n    Well `Well Position` Omit  Sample.x Target Task     Reporter Quencher\n   <dbl> <chr>           <lgl> <chr>    <chr>  <chr>    <chr>    <chr>   \n 1     1 A1              FALSE 1A       Cov2   UNKNOWN  FAM      NFQ-MGB \n 2     2 A2              FALSE 1A       Cov2   UNKNOWN  FAM      NFQ-MGB \n 3     3 A3              FALSE 1A       Cov2   UNKNOWN  FAM      NFQ-MGB \n 4     4 A4              FALSE 3C       Cov2   UNKNOWN  FAM      NFQ-MGB \n 5     5 A5              FALSE 3C       Cov2   UNKNOWN  FAM      NFQ-MGB \n 6     6 A6              FALSE 3C       Cov2   UNKNOWN  FAM      NFQ-MGB \n 7     7 A7              FALSE 6B       Cov2   UNKNOWN  FAM      NFQ-MGB \n 8     8 A8              FALSE 6B       Cov2   UNKNOWN  FAM      NFQ-MGB \n 9     9 A9              FALSE 6B       Cov2   UNKNOWN  FAM      NFQ-MGB \n10    10 A10             FALSE 1000.0   Cov2   STANDARD FAM      NFQ-MGB \n# ℹ 359 more rows\n# ℹ 15 more variables: `Amp Status` <chr>, `Amp Score` <dbl>,\n#   `Curve Quality` <lgl>, `Result Quality Issues` <lgl>, Cq <dbl>,\n#   `Cq Confidence` <dbl>, `Cq Mean` <dbl>, `Cq SD` <dbl>,\n#   `Auto Threshold` <lgl>, Threshold <dbl>, `Auto Baseline` <lgl>,\n#   `Baseline Start` <dbl>, `Baseline End` <dbl>, Sample.y <chr>, Sample <chr>\n```\n:::\n\n```{.r .cell-code}\ncorrected_raw_data |>\n  count(Target, Sample) |>\n  print(n = Inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 131 × 3\n    Target Sample                    n\n    <chr>  <chr>                 <int>\n  1 16S    0.0034500000000000004     3\n  2 16S    0.0345                    3\n  3 16S    0.34500000000000003       3\n  4 16S    1A                        3\n  5 16S    1B                        3\n  6 16S    1C                        3\n  7 16S    2A                        3\n  8 16S    2B                        3\n  9 16S    2C                        3\n 10 16S    3.45                      3\n 11 16S    3.4500000000000004E-4     3\n 12 16S    3A                        3\n 13 16S    3B                        3\n 14 16S    3C                        3\n 15 16S    4A                        3\n 16 16S    4B                        3\n 17 16S    4C                        3\n 18 16S    5A                        3\n 19 16S    5B                        3\n 20 16S    5C                        3\n 21 16S    6A                        3\n 22 16S    6B                        3\n 23 16S    6C                        3\n 24 16S    7A                        3\n 25 16S    7B                        3\n 26 16S    7C                        3\n 27 16S    <NA>                      3\n 28 Cov2   0.010000000000000002      3\n 29 Cov2   0.1                       3\n 30 Cov2   1.0                       3\n 31 Cov2   10.0                      3\n 32 Cov2   100.0                     3\n 33 Cov2   1000.0                    3\n 34 Cov2   1A                        3\n 35 Cov2   1B                        3\n 36 Cov2   1C                        3\n 37 Cov2   2A                        3\n 38 Cov2   2B                        3\n 39 Cov2   2C                        3\n 40 Cov2   3A                        3\n 41 Cov2   3B                        3\n 42 Cov2   3C                        3\n 43 Cov2   3C/10                     2\n 44 Cov2   3C/100                    2\n 45 Cov2   4A                        3\n 46 Cov2   4B                        3\n 47 Cov2   4C                        3\n 48 Cov2   5A                        3\n 49 Cov2   5B                        3\n 50 Cov2   5C                        3\n 51 Cov2   6A                        3\n 52 Cov2   6B                        3\n 53 Cov2   6C                        3\n 54 Cov2   6C/10                     2\n 55 Cov2   6C/100                    2\n 56 Cov2   7A                        3\n 57 Cov2   7B                        3\n 58 Cov2   7C                        3\n 59 Cov2   7C/10                     2\n 60 Cov2   7C/100                    2\n 61 Cov2   <NA>                      3\n 62 CrA    1A                        3\n 63 CrA    1B                        3\n 64 CrA    1C                        3\n 65 CrA    1C/10                     2\n 66 CrA    2A                        3\n 67 CrA    2B                        3\n 68 CrA    2C                        3\n 69 CrA    3.0E7                     3\n 70 CrA    3000.0                    3\n 71 CrA    30000.0                   3\n 72 CrA    300000.0                  3\n 73 CrA    3000000.0                 3\n 74 CrA    3A                        3\n 75 CrA    3B                        3\n 76 CrA    3C                        3\n 77 CrA    3C/10                     2\n 78 CrA    3C/100                    2\n 79 CrA    4A                        3\n 80 CrA    4B                        3\n 81 CrA    4C                        3\n 82 CrA    5A                        3\n 83 CrA    5B                        3\n 84 CrA    5C                        3\n 85 CrA    6A                        3\n 86 CrA    6B                        3\n 87 CrA    6C                        3\n 88 CrA    6C/10                     2\n 89 CrA    6C/100                    2\n 90 CrA    7A                        3\n 91 CrA    7B                        3\n 92 CrA    7C                        3\n 93 CrA    7C/10                     2\n 94 CrA    7C/100                    4\n 95 CrA    <NA>                      2\n 96 Noro   1.0                       3\n 97 Noro   10.0                      3\n 98 Noro   100.0                     3\n 99 Noro   1000.0                    3\n100 Noro   10000.0                   3\n101 Noro   1A                        3\n102 Noro   1B                        3\n103 Noro   1C                        3\n104 Noro   1C/10                     2\n105 Noro   1C/100                    2\n106 Noro   2A                        3\n107 Noro   2B                        3\n108 Noro   2C                        3\n109 Noro   3A                        3\n110 Noro   3B                        3\n111 Noro   3C                        3\n112 Noro   3C/10                     1\n113 Noro   3C/100                    1\n114 Noro   4A                        3\n115 Noro   4B                        3\n116 Noro   4C                        3\n117 Noro   5A                        3\n118 Noro   5B                        3\n119 Noro   5C                        3\n120 Noro   6A                        3\n121 Noro   6B                        3\n122 Noro   6C                        3\n123 Noro   6C/10                     1\n124 Noro   6C/100                    1\n125 Noro   7A                        3\n126 Noro   7B                        3\n127 Noro   7C                        3\n128 Noro   7C/10                     1\n129 Noro   7C/100                    1\n130 Noro   NTC                       2\n131 Noro   empty                     6\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmetadata_file <- paste0(\n  data_dir,\n  \"[2023-09-11] Extraction Experiment 2 templates and results\",\n  \" - sampleMetadata.csv\"\n)\nmetadata <- read_csv(metadata_file)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 21 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): Sample_ID, Extraction_kit, Short_kit, Elution_format, Brand, NA_Target\ndbl (2): Kit Batch, Elution_volume\nlgl (1): FP_sampleID\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nglimpse(metadata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 21\nColumns: 9\n$ Sample_ID      <chr> \"1A\", \"1B\", \"1C\", \"2A\", \"2B\", \"2C\", \"3A\", \"3B\", \"3C\", \"…\n$ Extraction_kit <chr> \"Zymo quick-RNA\", \"Zymo quick-RNA\", \"Zymo quick-RNA\", \"…\n$ Short_kit      <chr> \"1_ZR\", \"1_ZR\", \"1_ZR\", \"2_ZD\", \"2_ZD\", \"2_ZD\", \"3_IPL\"…\n$ `Kit Batch`    <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3…\n$ Elution_volume <dbl> 30, 30, 30, 100, 100, 100, 100, 100, 100, 60, 60, 60, 1…\n$ Elution_format <chr> \"15*2\", \"15*2\", \"15*2\", \"50*2\", \"50*2\", \"50*2\", \"50*2\",…\n$ Brand          <chr> \"Zymo\", \"Zymo\", \"Zymo\", \"Zymo\", \"Zymo\", \"Zymo\", \"Invitr…\n$ NA_Target      <chr> \"RNA\", \"RNA\", \"RNA\", \"DNA+RNA\", \"DNA+RNA\", \"DNA+RNA\", \"…\n$ FP_sampleID    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data <- corrected_raw_data |>\n  mutate(\n    Sample_ID = str_split_i(Sample, \"/\", 1),\n    dilution = as.integer(str_split_i(Sample, \"/\", 2)),\n    replicate = str_extract(Sample_ID, \"[A-Z]$\"),\n    quantity = as.double(Sample),\n  ) |>\n  mutate(dilution = replace_na(dilution, 1)) |>\n  left_join(\n    metadata,\n    by = join_by(Sample_ID)\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `quantity = as.double(Sample)`.\nCaused by warning:\n! NAs introduced by coercion\n```\n:::\n\n```{.r .cell-code}\nglimpse(tidy_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 369\nColumns: 35\n$ Well                    <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,…\n$ `Well Position`         <chr> \"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"A7\", \"A8\"…\n$ Omit                    <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS…\n$ Sample.x                <chr> \"1A\", \"1A\", \"1A\", \"3C\", \"3C\", \"3C\", \"6B\", \"6B\"…\n$ Target                  <chr> \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\"…\n$ Task                    <chr> \"UNKNOWN\", \"UNKNOWN\", \"UNKNOWN\", \"UNKNOWN\", \"U…\n$ Reporter                <chr> \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM…\n$ Quencher                <chr> \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"N…\n$ `Amp Status`            <chr> \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"NO_…\n$ `Amp Score`             <dbl> 1.1701024, 1.0212594, 1.1604009, 1.1057531, 1.…\n$ `Curve Quality`         <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ `Result Quality Issues` <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Cq                      <dbl> 32.44077, 35.24757, 33.72678, 34.44077, 34.704…\n$ `Cq Confidence`         <dbl> 0.9451320, 0.9773032, 0.9759027, 0.9634213, 0.…\n$ `Cq Mean`               <dbl> 33.80504, 33.80504, 33.80504, 34.31332, 34.313…\n$ `Cq SD`                 <dbl> 1.4050310, 1.4050310, 1.4050310, 0.4683633, 0.…\n$ `Auto Threshold`        <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ Threshold               <dbl> 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04…\n$ `Auto Baseline`         <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ `Baseline Start`        <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ `Baseline End`          <dbl> 29, 32, 30, 31, 31, 31, 31, 31, 31, 21, 21, 21…\n$ Sample.y                <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Sample                  <chr> \"1A\", \"1A\", \"1A\", \"3C\", \"3C\", \"3C\", \"6B\", \"6B\"…\n$ Sample_ID               <chr> \"1A\", \"1A\", \"1A\", \"3C\", \"3C\", \"3C\", \"6B\", \"6B\"…\n$ dilution                <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ replicate               <chr> \"A\", \"A\", \"A\", \"C\", \"C\", \"C\", \"B\", \"B\", \"B\", N…\n$ quantity                <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, 1000, 1000…\n$ Extraction_kit          <chr> \"Zymo quick-RNA\", \"Zymo quick-RNA\", \"Zymo quic…\n$ Short_kit               <chr> \"1_ZR\", \"1_ZR\", \"1_ZR\", \"3_IPL\", \"3_IPL\", \"3_I…\n$ `Kit Batch`             <dbl> 1, 1, 1, 1, 1, 1, 3, 3, 3, NA, NA, NA, 1, 1, 1…\n$ Elution_volume          <dbl> 30, 30, 30, 100, 100, 100, 80, 80, 80, NA, NA,…\n$ Elution_format          <chr> \"15*2\", \"15*2\", \"15*2\", \"50*2\", \"50*2\", \"50*2\"…\n$ Brand                   <chr> \"Zymo\", \"Zymo\", \"Zymo\", \"Invitrogen\", \"Invitro…\n$ NA_Target               <chr> \"RNA\", \"RNA\", \"RNA\", \"RNA\", \"RNA\", \"RNA\", \"RNA…\n$ FP_sampleID             <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data |>\n  count(Sample_ID, Target, dilution, replicate) |>\n  print(n = Inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 131 × 5\n    Sample_ID             Target dilution replicate     n\n    <chr>                 <chr>     <int> <chr>     <int>\n  1 0.0034500000000000004 16S           1 <NA>          3\n  2 0.010000000000000002  Cov2          1 <NA>          3\n  3 0.0345                16S           1 <NA>          3\n  4 0.1                   Cov2          1 <NA>          3\n  5 0.34500000000000003   16S           1 <NA>          3\n  6 1.0                   Cov2          1 <NA>          3\n  7 1.0                   Noro          1 <NA>          3\n  8 10.0                  Cov2          1 <NA>          3\n  9 10.0                  Noro          1 <NA>          3\n 10 100.0                 Cov2          1 <NA>          3\n 11 100.0                 Noro          1 <NA>          3\n 12 1000.0                Cov2          1 <NA>          3\n 13 1000.0                Noro          1 <NA>          3\n 14 10000.0               Noro          1 <NA>          3\n 15 1A                    16S           1 A             3\n 16 1A                    Cov2          1 A             3\n 17 1A                    CrA           1 A             3\n 18 1A                    Noro          1 A             3\n 19 1B                    16S           1 B             3\n 20 1B                    Cov2          1 B             3\n 21 1B                    CrA           1 B             3\n 22 1B                    Noro          1 B             3\n 23 1C                    16S           1 C             3\n 24 1C                    Cov2          1 C             3\n 25 1C                    CrA           1 C             3\n 26 1C                    CrA          10 C             2\n 27 1C                    Noro          1 C             3\n 28 1C                    Noro         10 C             2\n 29 1C                    Noro        100 C             2\n 30 2A                    16S           1 A             3\n 31 2A                    Cov2          1 A             3\n 32 2A                    CrA           1 A             3\n 33 2A                    Noro          1 A             3\n 34 2B                    16S           1 B             3\n 35 2B                    Cov2          1 B             3\n 36 2B                    CrA           1 B             3\n 37 2B                    Noro          1 B             3\n 38 2C                    16S           1 C             3\n 39 2C                    Cov2          1 C             3\n 40 2C                    CrA           1 C             3\n 41 2C                    Noro          1 C             3\n 42 3.0E7                 CrA           1 <NA>          3\n 43 3.45                  16S           1 <NA>          3\n 44 3.4500000000000004E-4 16S           1 <NA>          3\n 45 3000.0                CrA           1 <NA>          3\n 46 30000.0               CrA           1 <NA>          3\n 47 300000.0              CrA           1 <NA>          3\n 48 3000000.0             CrA           1 <NA>          3\n 49 3A                    16S           1 A             3\n 50 3A                    Cov2          1 A             3\n 51 3A                    CrA           1 A             3\n 52 3A                    Noro          1 A             3\n 53 3B                    16S           1 B             3\n 54 3B                    Cov2          1 B             3\n 55 3B                    CrA           1 B             3\n 56 3B                    Noro          1 B             3\n 57 3C                    16S           1 C             3\n 58 3C                    Cov2          1 C             3\n 59 3C                    Cov2         10 C             2\n 60 3C                    Cov2        100 C             2\n 61 3C                    CrA           1 C             3\n 62 3C                    CrA          10 C             2\n 63 3C                    CrA         100 C             2\n 64 3C                    Noro          1 C             3\n 65 3C                    Noro         10 C             1\n 66 3C                    Noro        100 C             1\n 67 4A                    16S           1 A             3\n 68 4A                    Cov2          1 A             3\n 69 4A                    CrA           1 A             3\n 70 4A                    Noro          1 A             3\n 71 4B                    16S           1 B             3\n 72 4B                    Cov2          1 B             3\n 73 4B                    CrA           1 B             3\n 74 4B                    Noro          1 B             3\n 75 4C                    16S           1 C             3\n 76 4C                    Cov2          1 C             3\n 77 4C                    CrA           1 C             3\n 78 4C                    Noro          1 C             3\n 79 5A                    16S           1 A             3\n 80 5A                    Cov2          1 A             3\n 81 5A                    CrA           1 A             3\n 82 5A                    Noro          1 A             3\n 83 5B                    16S           1 B             3\n 84 5B                    Cov2          1 B             3\n 85 5B                    CrA           1 B             3\n 86 5B                    Noro          1 B             3\n 87 5C                    16S           1 C             3\n 88 5C                    Cov2          1 C             3\n 89 5C                    CrA           1 C             3\n 90 5C                    Noro          1 C             3\n 91 6A                    16S           1 A             3\n 92 6A                    Cov2          1 A             3\n 93 6A                    CrA           1 A             3\n 94 6A                    Noro          1 A             3\n 95 6B                    16S           1 B             3\n 96 6B                    Cov2          1 B             3\n 97 6B                    CrA           1 B             3\n 98 6B                    Noro          1 B             3\n 99 6C                    16S           1 C             3\n100 6C                    Cov2          1 C             3\n101 6C                    Cov2         10 C             2\n102 6C                    Cov2        100 C             2\n103 6C                    CrA           1 C             3\n104 6C                    CrA          10 C             2\n105 6C                    CrA         100 C             2\n106 6C                    Noro          1 C             3\n107 6C                    Noro         10 C             1\n108 6C                    Noro        100 C             1\n109 7A                    16S           1 A             3\n110 7A                    Cov2          1 A             3\n111 7A                    CrA           1 A             3\n112 7A                    Noro          1 A             3\n113 7B                    16S           1 B             3\n114 7B                    Cov2          1 B             3\n115 7B                    CrA           1 B             3\n116 7B                    Noro          1 B             3\n117 7C                    16S           1 C             3\n118 7C                    Cov2          1 C             3\n119 7C                    Cov2         10 C             2\n120 7C                    Cov2        100 C             2\n121 7C                    CrA           1 C             3\n122 7C                    CrA          10 C             2\n123 7C                    CrA         100 C             4\n124 7C                    Noro          1 C             3\n125 7C                    Noro         10 C             1\n126 7C                    Noro        100 C             1\n127 NTC                   Noro          1 C             2\n128 empty                 Noro          1 <NA>          6\n129 <NA>                  16S           1 <NA>          3\n130 <NA>                  Cov2          1 <NA>          3\n131 <NA>                  CrA           1 <NA>          2\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data |>\n  count(`Result Quality Issues`)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n  `Result Quality Issues`     n\n  <lgl>                   <int>\n1 NA                        369\n```\n:::\n:::\n\n\n## Kit comparison\n\n### With equal Cq axes\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data |>\n  filter(\n    !is.na(Extraction_kit),\n    dilution == 1,\n  ) |>\n  ggplot(mapping = aes(\n    x = Cq,\n    y = Extraction_kit,\n    color = replicate,\n  )) +\n  stat_summary(\n    fun.min = min,\n    fun.max = max,\n    fun = median,\n    position = position_dodge(width = 0.2),\n    size = 0.2\n  ) +\n  facet_wrap(facets = ~Target)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 4 rows containing non-finite values (`stat_summary()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-09-15-qpcr_analysis_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n### With free Cq axes\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data |>\n  filter(\n    !is.na(Extraction_kit),\n    dilution == 1,\n  ) |>\n  ggplot(mapping = aes(\n    x = Cq,\n    y = Extraction_kit,\n    color = replicate,\n  )) +\n  stat_summary(\n    fun.min = min,\n    fun.max = max,\n    fun = median,\n    position = position_dodge(width = 0.2),\n    size = 0.2\n  ) +\n  facet_wrap(facets = ~Target, scales = \"free_x\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 4 rows containing non-finite values (`stat_summary()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-09-15-qpcr_analysis_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nCheck that the overlapping points really do have three values\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data |>\n  filter(!is.na(Extraction_kit), is.na(Cq)) |>\n  count(Target, Extraction_kit, Sample_ID, dilution) |>\n  print()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 5\n  Target Extraction_kit                    Sample_ID dilution     n\n  <chr>  <chr>                             <chr>        <int> <int>\n1 Cov2   Invitrogen PureLink RNA           3C              10     2\n2 Cov2   Invitrogen PureLink RNA           3C             100     2\n3 Cov2   NucleoSpin Virus                  4B               1     2\n4 Cov2   QIAamp Viral RNA mini kit         6A               1     1\n5 Cov2   QIAamp Viral RNA mini kit         6C              10     1\n6 Cov2   QIAamp Viral RNA mini kit         6C             100     2\n7 Cov2   Qiagen AllPrep PowerViral DNA/RNA 7A               1     1\n8 Cov2   Qiagen AllPrep PowerViral DNA/RNA 7C              10     2\n9 Cov2   Qiagen AllPrep PowerViral DNA/RNA 7C             100     2\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data |>\n  filter(\n    Extraction_kit == \"Zymo quick-RNA\",\n    Target == \"CrA\", replicate == \"A\"\n  ) |>\n  print(width = Inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 35\n   Well `Well Position` Omit  Sample.x Target Task    Reporter Quencher\n  <dbl> <chr>           <lgl> <chr>    <chr>  <chr>   <chr>    <chr>   \n1     1 A1              FALSE 1A       CrA    UNKNOWN FAM      NFQ-MGB \n2     2 A2              FALSE 1A       CrA    UNKNOWN FAM      NFQ-MGB \n3     3 A3              FALSE 1A       CrA    UNKNOWN FAM      NFQ-MGB \n  `Amp Status` `Amp Score` `Curve Quality` `Result Quality Issues`    Cq\n  <chr>              <dbl> <lgl>           <lgl>                   <dbl>\n1 AMP                 1.41 NA              NA                       21.1\n2 AMP                 1.43 NA              NA                       21.0\n3 AMP                 1.42 NA              NA                       21.1\n  `Cq Confidence` `Cq Mean` `Cq SD` `Auto Threshold` Threshold `Auto Baseline`\n            <dbl>     <dbl>   <dbl> <lgl>                <dbl> <lgl>          \n1           0.989      21.1  0.0535 TRUE                 0.175 TRUE           \n2           0.989      21.1  0.0535 TRUE                 0.175 TRUE           \n3           0.989      21.1  0.0535 TRUE                 0.175 TRUE           \n  `Baseline Start` `Baseline End` Sample.y Sample Sample_ID dilution replicate\n             <dbl>          <dbl> <chr>    <chr>  <chr>        <int> <chr>    \n1                3             16 <NA>     1A     1A               1 A        \n2                3             15 <NA>     1A     1A               1 A        \n3                3             16 <NA>     1A     1A               1 A        \n  quantity Extraction_kit Short_kit `Kit Batch` Elution_volume Elution_format\n     <dbl> <chr>          <chr>           <dbl>          <dbl> <chr>         \n1       NA Zymo quick-RNA 1_ZR                1             30 15*2          \n2       NA Zymo quick-RNA 1_ZR                1             30 15*2          \n3       NA Zymo quick-RNA 1_ZR                1             30 15*2          \n  Brand NA_Target FP_sampleID\n  <chr> <chr>     <lgl>      \n1 Zymo  RNA       NA         \n2 Zymo  RNA       NA         \n3 Zymo  RNA       NA         \n```\n:::\n:::\n\n\n### Adjusting for elution volume\n\nAssume the amplification efficiency is 100%, so that\nan increase in initial concentration by a factor of $x$\ndecreases $C_q$ by $\\log_{2}(x)$.\n\nIf a method has elution volume $v$ and we dilute it to total volume $V$,\nthis reduces its final concentration by a factor $v / V$.\nWe can put different\nmethods on the same footing by adding $\\log_{2}(v/V)$ to $C_q$\n(so that large elution volumes are penalized with a higher adjusted $C_q$).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_volume <- 100\ntidy_data |>\n  mutate(elution_adjusted_Cq = Cq + log2(Elution_volume / final_volume)) |>\n  filter(\n    !is.na(Extraction_kit),\n    dilution == 1,\n  ) |>\n  ggplot(mapping = aes(\n    x = elution_adjusted_Cq,\n    y = Extraction_kit,\n    color = replicate,\n  )) +\n  stat_summary(\n    fun.min = min,\n    fun.max = max,\n    fun = median,\n    position = position_dodge(width = 0.2),\n    size = 0.2\n  ) +\n  facet_wrap(facets = ~Target, scales = \"free_x\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 4 rows containing non-finite values (`stat_summary()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-09-15-qpcr_analysis_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n## Standard curves\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data |>\n  filter(\n    Task == \"STANDARD\",\n    dilution == 1,\n  ) |>\n  ggplot(mapping = aes(\n    x = quantity,\n    y = Cq,\n  )) +\n  stat_summary(\n    fun.min = min,\n    fun.max = max,\n    fun = median,\n    position = position_dodge(width = 0.2),\n    size = 0.2\n  ) +\n  geom_smooth(method = \"lm\") +\n  scale_x_continuous(trans = \"log10\") +\n  facet_wrap(facets = ~Target, scales = \"free_x\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 4 rows containing non-finite values (`stat_summary()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 4 rows containing non-finite values (`stat_smooth()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-09-15-qpcr_analysis_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nNot sure what the units of the X-axis are\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfits <- tibble()\nfor (target in unique(tidy_data$Target)) {\n  fit <- lm(Cq ~ log10(quantity),\n    data = filter(tidy_data, Task == \"STANDARD\", Target == target)\n  ) |>\n    tidy() |>\n    mutate(Target = target, efficiency = 10^-(1 / estimate) - 1)\n  fits <- bind_rows(fits, fit)\n}\nprint(fits |> filter(term == \"log10(quantity)\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 7\n  term            estimate std.error statistic  p.value Target efficiency\n  <chr>              <dbl>     <dbl>     <dbl>    <dbl> <chr>       <dbl>\n1 log10(quantity)    -2.61    0.143      -18.2 1.23e-10 Cov2         1.42\n2 log10(quantity)    -2.85    0.108      -26.4 5.34e-12 Noro         1.24\n3 log10(quantity)    -2.59    0.0703     -36.8 1.58e-14 CrA          1.43\n4 log10(quantity)    -2.68    0.148      -18.1 1.32e-10 16S          1.36\n```\n:::\n:::\n\nThese match the Design & Analysis software.\n\n## Dilution series\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data |>\n  filter(Task == \"UNKNOWN\", dilution > 1) |>\n  count(Target, Extraction_kit, dilution) |>\n  print(n = Inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 21 × 4\n   Target Extraction_kit                    dilution     n\n   <chr>  <chr>                                <int> <int>\n 1 Cov2   Invitrogen PureLink RNA                 10     2\n 2 Cov2   Invitrogen PureLink RNA                100     2\n 3 Cov2   QIAamp Viral RNA mini kit               10     2\n 4 Cov2   QIAamp Viral RNA mini kit              100     2\n 5 Cov2   Qiagen AllPrep PowerViral DNA/RNA       10     2\n 6 Cov2   Qiagen AllPrep PowerViral DNA/RNA      100     2\n 7 CrA    Invitrogen PureLink RNA                 10     2\n 8 CrA    Invitrogen PureLink RNA                100     2\n 9 CrA    QIAamp Viral RNA mini kit               10     2\n10 CrA    QIAamp Viral RNA mini kit              100     2\n11 CrA    Qiagen AllPrep PowerViral DNA/RNA       10     2\n12 CrA    Qiagen AllPrep PowerViral DNA/RNA      100     4\n13 CrA    Zymo quick-RNA                          10     2\n14 Noro   Invitrogen PureLink RNA                 10     1\n15 Noro   Invitrogen PureLink RNA                100     1\n16 Noro   QIAamp Viral RNA mini kit               10     1\n17 Noro   QIAamp Viral RNA mini kit              100     1\n18 Noro   Qiagen AllPrep PowerViral DNA/RNA       10     1\n19 Noro   Qiagen AllPrep PowerViral DNA/RNA      100     1\n20 Noro   Zymo quick-RNA                          10     1\n21 Noro   Zymo quick-RNA                         100     1\n```\n:::\n:::\n\n\nLooks like we have dilution series for four kits.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndilution_kits <- c(\n  \"Invitrogen PureLink RNA\",\n  \"QIAamp Viral RNA mini kit\",\n  \"Qiagen AllPrep PowerViral DNA/RNA\",\n  \"Zymo quick-RNA\"\n)\ntidy_data |>\n  filter(\n    Task == \"UNKNOWN\",\n    Target != \"16S\",\n    is.element(Extraction_kit, dilution_kits)\n  ) |>\n  ggplot(mapping = aes(\n    x = dilution,\n    y = Cq,\n  )) +\n  geom_point(mapping = aes(color = replicate)) +\n  geom_smooth(method = \"lm\") +\n  scale_x_continuous(trans = \"log10\") +\n  facet_grid(cols = vars(Extraction_kit), rows = vars(Target), scale = \"free_y\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 13 rows containing non-finite values (`stat_smooth()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 13 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-09-15-qpcr_analysis_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfits <- tibble()\nfor (target in unique(tidy_data$Target)) {\n  for (kit in dilution_kits) {\n    fit <- lm(Cq ~ log10(dilution),\n      data = filter(tidy_data, Target == target, Extraction_kit == kit)\n    ) |>\n      tidy() |>\n      mutate(\n        Target = target,\n        Extraction_kit = kit,\n        # Changed sign because we have dilution factor not quantity\n        efficiency = 10^(1 / estimate) - 1\n      )\n    fits <- bind_rows(fits, fit)\n  }\n}\nprint(fits |> filter(Target != \"16S\", term == \"log10(dilution)\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 8\n   term  estimate std.error statistic   p.value Target Extraction_kit efficiency\n   <chr>    <dbl>     <dbl>     <dbl>     <dbl> <chr>  <chr>               <dbl>\n 1 log1…    NA      NA          NA    NA        Cov2   Invitrogen Pu…     NA    \n 2 log1…     2.51    0.869       2.88  2.35e- 2 Cov2   QIAamp Viral …      1.51 \n 3 log1…    NA      NA          NA    NA        Cov2   Qiagen AllPre…     NA    \n 4 log1…    NA      NA          NA    NA        Cov2   Zymo quick-RNA     NA    \n 5 log1…     2.92    0.0778     37.6   3.30e-11 Noro   Invitrogen Pu…      1.20 \n 6 log1…     3.07    0.151      20.3   7.80e- 9 Noro   QIAamp Viral …      1.12 \n 7 log1…     3.20    0.118      27.1   6.24e-10 Noro   Qiagen AllPre…      1.05 \n 8 log1…     2.69    0.0772     34.8   1.31e-12 Noro   Zymo quick-RNA      1.35 \n 9 log1…     3.59    0.205      17.5   2.24e- 9 CrA    Invitrogen Pu…      0.898\n10 log1…     3.58    0.0852     42.0   1.68e-13 CrA    QIAamp Viral …      0.902\n11 log1…     2.84    0.330       8.61  9.92e- 7 CrA    Qiagen AllPre…      1.25 \n12 log1…     5.14    0.644       7.98  2.25e- 5 CrA    Zymo quick-RNA      0.565\n```\n:::\n:::\n\n\n## Amplification curves\n\n\n::: {.cell}\n\n```{.r .cell-code}\namp_data <- list.files(\n  paste0(data_dir, \"qpcr\"),\n  pattern = \"Amplification Data\",\n  full.names = TRUE,\n) |>\n  map(function(f) {\n    read_csv(f,\n      skip = 23,\n      col_types = col_types,\n    )\n  }) |>\n  list_rbind() |>\n  mutate(\n    replicate = str_extract(Sample, \"[A-Z]\"),\n    Sample_ID = str_split_i(Sample, \"/\", 1),\n    dilution = as.integer(str_split_i(Sample, \"/\", 2)),\n    quantity = as.double(Sample),\n  ) |>\n  mutate(dilution = replace_na(dilution, 1)) |>\n  left_join(\n    metadata,\n    by = join_by(Sample_ID)\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The following named parsers don't match the column names: Cq\nThe following named parsers don't match the column names: Cq\nThe following named parsers don't match the column names: Cq\nThe following named parsers don't match the column names: Cq\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `quantity = as.double(Sample)`.\nCaused by warning:\n! NAs introduced by coercion\n```\n:::\n\n```{.r .cell-code}\nprint(amp_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 14,760 × 20\n    Well `Well Position` `Cycle Number` Target    Rn      dRn Sample Omit \n   <dbl> <chr>                    <dbl> <chr>  <dbl>    <dbl> <chr>  <lgl>\n 1     1 A1                           1 Cov2   0.877  0.0311  1A     FALSE\n 2     1 A1                           2 Cov2   0.870  0.0262  1A     FALSE\n 3     1 A1                           3 Cov2   0.856  0.0145  1A     FALSE\n 4     1 A1                           4 Cov2   0.848  0.00816 1A     FALSE\n 5     1 A1                           5 Cov2   0.844  0.00638 1A     FALSE\n 6     1 A1                           6 Cov2   0.838  0.00299 1A     FALSE\n 7     1 A1                           7 Cov2   0.832 -0.00128 1A     FALSE\n 8     1 A1                           8 Cov2   0.829 -0.00202 1A     FALSE\n 9     1 A1                           9 Cov2   0.824 -0.00480 1A     FALSE\n10     1 A1                          10 Cov2   0.821 -0.00546 1A     FALSE\n# ℹ 14,750 more rows\n# ℹ 12 more variables: replicate <chr>, Sample_ID <chr>, dilution <int>,\n#   quantity <dbl>, Extraction_kit <chr>, Short_kit <chr>, `Kit Batch` <dbl>,\n#   Elution_volume <dbl>, Elution_format <chr>, Brand <chr>, NA_Target <chr>,\n#   FP_sampleID <lgl>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\namp_data |>\n  filter(!is.na(Extraction_kit)) |>\n  ggplot(mapping = aes(\n    x = `Cycle Number`,\n    y = dRn,\n    color = as.factor(dilution),\n    group = Well\n  )) +\n  geom_line() +\n  facet_grid(\n    cols = vars(Extraction_kit), rows = vars(Target), scales = \"free_y\"\n  )\n```\n\n::: {.cell-output-display}\n![](2023-09-15-qpcr_analysis_files/figure-html/unnamed-chunk-21-1.png){width=1344}\n:::\n:::\n\n\n## Background fluorescence\n\n\n::: {.cell}\n\n```{.r .cell-code}\nraw_qpcr_data <- list.files(\n  paste0(data_dir, \"qpcr\"),\n  pattern = \"_Multicomponent_\",\n  full.names = TRUE,\n) |>\n  print() |>\n  map(function(f) {\n    read_csv(f,\n      skip = 23,\n      col_types = col_types,\n    )\n  }) |>\n  list_rbind() |>\n  print()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"/Users/dan/airport/[2023-09-06] Extraction-kit comparison 2: Settled Solids/qpcr/2023-09-14_Cov2_extractions_Multicomponent_20230915_100200.csv\"\n[2] \"/Users/dan/airport/[2023-09-06] Extraction-kit comparison 2: Settled Solids/qpcr/2023-09-14_Noro_Extractions_Multicomponent_20230915_100255.csv\"\n[3] \"/Users/dan/airport/[2023-09-06] Extraction-kit comparison 2: Settled Solids/qpcr/2023-09-15_CrA_extractions_Multicomponent_20230915_105855.csv\" \n[4] \"/Users/dan/airport/[2023-09-06] Extraction-kit comparison 2: Settled Solids/qpcr/2023-09-18_16S_extractions_Multicomponent_20230918_151203.csv\" \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The following named parsers don't match the column names: Target, Cq\nThe following named parsers don't match the column names: Target, Cq\nThe following named parsers don't match the column names: Target, Cq\nThe following named parsers don't match the column names: Target, Cq\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 14,760 × 7\n    Well `Well Position` `Stage Number` `Step Number` `Cycle Number`     FAM\n   <dbl> <chr>                    <dbl>         <dbl>          <dbl>   <dbl>\n 1     1 A1                           2             2              1 326798.\n 2     1 A1                           2             2              2 323795.\n 3     1 A1                           2             2              3 318092 \n 4     1 A1                           2             2              4 314307.\n 5     1 A1                           2             2              5 312277.\n 6     1 A1                           2             2              6 309855.\n 7     1 A1                           2             2              7 307088.\n 8     1 A1                           2             2              8 305802.\n 9     1 A1                           2             2              9 303988.\n10     1 A1                           2             2             10 302549.\n# ℹ 14,750 more rows\n# ℹ 1 more variable: ROX <dbl>\n```\n:::\n:::\n\n\n## TODO\n\n- ~~Boxplots~~\n- ~~Standard curve data~~\n- ~~Diluted samples~~\n- ~~Amplification curves~~\n- Relabel flipped norovirus dilution samples\n- Investigate the threshold\n- Investigate the efficiency caluculations: compare amp curves, standard curves, and dilution series\n- Check amplification curves, including autothreshold in linear phase. (Possibly adjust)\n- Check negative controls (may need to use raw Rns rather than delta to avoid baseline subtraction issues)\n- Be aware of non-control samples with no amplification detected (no Cq values). Summary stats of which this is true for.\n- Plot baseline start and stop (determines the interval used for baseline subtraction)\n- Background fluorescence\n",
    "supporting": [
      "2023-09-15-qpcr_analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}