{
  "hash": "db4986ace7c69741be4b3a7b8e751185",
  "result": {
    "markdown": "---\ntitle: \"2023-10-16 Analysis of recent protocol-comparison experiments\"\nauthor: \"Dan Rice\"\ndate: 2023-10-16\ntoc: true\nformat:\n  html:\n    code-fold: false\n---\n\n## Objectives\n\nSee [Twist](https://twist.com/a/197793/ch/591292/t/5631080/)\n\n## Preliminary work\n\nExported csv files from Olivia's eds file uploads.\nAlso exported metadata google sheets as CSV\n\n## Data import\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nhere() starts at /Users/dan/notebook\n```\n:::\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(purrr)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(broom)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nget_plate <- function(f) {\n  str_extract(basename(f),\n    \"(.*)_(.*)_[0-9]{8}_[0-9]{6}\\\\.csv\",\n    group = 1\n  )\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_dir <- here(\"~\", \"airport\")\nexperiments <- c(\n  paste(\n    \"[2023-10-12] Settled Solids Protocol Development,\",\n    \"Vortex Time and Centrifuge Settings\"\n  ),\n  \"[2023-10-10] Daily Processing Protocol Testing\",\n  \"[2023-09-22] New Processing Tests\"\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfilename_pattern <- \"_Results_\"\ncol_types <- list(\n  Target = col_character(),\n  Cq = col_double(),\n  TreatmentGroup = col_character()\n)\nraw_data <- list.files(\n  map_chr(experiments, function(exp) {\n    here(data_dir, exp, \"qpcr\")\n  }),\n  pattern = filename_pattern,\n  recursive = TRUE,\n  full.names = TRUE,\n) |>\n  print() |>\n  map(function(f) {\n    read_csv(f, skip = 23, col_types = col_types) |>\n      mutate(plate = get_plate(f))\n  }) |>\n  list_rbind() |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"/Users/dan/airport/[2023-09-22] New Processing Tests/qpcr/2023-10-09_Cov2_PMMV_Results_20231010_125053.csv\"                                                         \n[2] \"/Users/dan/airport/[2023-09-22] New Processing Tests/qpcr/2023-10-09_CrA_16S_Results_20231010_125152.csv\"                                                           \n[3] \"/Users/dan/airport/[2023-09-22] New Processing Tests/qpcr/2023-10-09_Noro_Results_20231010_125241.csv\"                                                              \n[4] \"/Users/dan/airport/[2023-10-12] Settled Solids Protocol Development, Vortex Time and Centrifuge Settings/qpcr/2023-10-14_16S_Results_20231016_105057.csv\"           \n[5] \"/Users/dan/airport/[2023-10-12] Settled Solids Protocol Development, Vortex Time and Centrifuge Settings/qpcr/2023-10-14_Cov2_CORRECTED_Results_20231016_133517.csv\"\n[6] \"/Users/dan/airport/[2023-10-12] Settled Solids Protocol Development, Vortex Time and Centrifuge Settings/qpcr/2023-10-14_CrA_Results_20231016_104600.csv\"           \n[7] \"/Users/dan/airport/[2023-10-12] Settled Solids Protocol Development, Vortex Time and Centrifuge Settings/qpcr/2023-10-14_Noro_Results_20231016_130005.csv\"          \n[8] \"/Users/dan/airport/[2023-10-12] Settled Solids Protocol Development, Vortex Time and Centrifuge Settings/qpcr/2023-10-14_PMMoV_Results_20231016_104527.csv\"         \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The following named parsers don't match the column names:\nTreatmentGroup\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The following named parsers don't match the column names:\nTreatmentGroup\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The following named parsers don't match the column names:\nTreatmentGroup\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The following named parsers don't match the column names: TreatmentGroup\nThe following named parsers don't match the column names: TreatmentGroup\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The following named parsers don't match the column names:\nTreatmentGroup\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The following named parsers don't match the column names:\nTreatmentGroup\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The following named parsers don't match the column names:\nTreatmentGroup\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 481\nColumns: 22\n$ Well                    <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,…\n$ `Well Position`         <chr> \"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"A7\", \"A8\"…\n$ Omit                    <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS…\n$ Sample                  <chr> \"1A\", \"1A\", \"1A\", \"10000.0\", \"10000.0\", \"10000…\n$ Target                  <chr> \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\"…\n$ Task                    <chr> \"UNKNOWN\", \"UNKNOWN\", \"UNKNOWN\", \"STANDARD\", \"…\n$ Reporter                <chr> \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM…\n$ Quencher                <chr> \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"N…\n$ `Amp Status`            <chr> \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP…\n$ `Amp Score`             <dbl> 1.3915582, 1.4014582, 1.4073581, 1.4090574, 1.…\n$ `Curve Quality`         <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ `Result Quality Issues` <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Cq                      <dbl> 33.15919, 32.98389, 32.66178, 22.39386, 22.220…\n$ `Cq Confidence`         <dbl> 0.9759085, 0.9891340, 0.9883204, 0.9891666, 0.…\n$ `Cq Mean`               <dbl> 32.93495, 32.93495, 32.93495, 22.31821, 22.318…\n$ `Cq SD`                 <dbl> 0.25229116, 0.25229116, 0.25229116, 0.08875503…\n$ `Auto Threshold`        <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ Threshold               <dbl> 0.2999157, 0.2999157, 0.2999157, 0.2999157, 0.…\n$ `Auto Baseline`         <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ `Baseline Start`        <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ `Baseline End`          <dbl> 27, 27, 26, 16, 16, 16, 24, 23, 23, 20, 20, 19…\n$ plate                   <chr> \"2023-10-09_Cov2_PMMV\", \"2023-10-09_Cov2_PMMV\"…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmetadata_file <- here(\n  data_dir,\n  experiments[1],\n  \"metadata.csv\"\n)\nmetadata <- experiments |>\n  map(function(exp) {\n    read_csv(here(data_dir, exp, \"metadata.csv\"), col_types = col_types)\n  }) |>\n  list_rbind() |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The following named parsers don't match the column names: Target, Cq\nThe following named parsers don't match the column names: Target, Cq\nThe following named parsers don't match the column names: Target, Cq\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 21\nColumns: 13\n$ Sample_ID         <chr> \"1-1\", \"1-2\", \"2-1\", \"2-2\", \"3-1\", \"3-2\", \"4-1\", \"4-…\n$ TreatmentGroup    <chr> \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"Centrifuge …\n$ VortexMin         <dbl> 20, 20, 20, 20, 5, 5, 5, 5, NA, NA, NA, NA, NA, NA, …\n$ CFSpeed           <dbl> 10000, 10000, 3500, 3500, 10000, 10000, 3500, 3500, …\n$ CollectionDate    <date> 2023-10-12, 2023-10-12, 2023-10-12, 2023-10-12, 202…\n$ Source            <chr> \"Solids\", \"Solids\", \"Solids\", \"Solids\", \"Solids\", \"S…\n$ Volume            <dbl> 15, 15, 15, 15, 15, 15, 15, 15, 200, 200, 20, 200, 2…\n$ Qubit_ID          <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ ProcessingHandler <chr> \"Ari\", \"Ari\", \"Ari\", \"Ari\", \"Ari\", \"Ari\", \"Ari\", \"Ar…\n$ ExtractionHandler <chr> \"Ari\", \"Ari\", \"Ari\", \"Ari\", \"Ari\", \"Ari\", \"Ari\", \"Ar…\n$ `qPCR date`       <date> 2023-10-14, 2023-10-14, 2023-10-14, 2023-10-14, 202…\n$ qPCRHandler       <chr> \"Olivia\", \"Olivia\", \"Olivia\", \"Olivia\", \"Olivia\", \"O…\n$ qPCR_dilution     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data <- raw_data |>\n  separate_wider_regex(\n    `Well Position`,\n    c(well_row = \"[A-Z]+\", well_col = \"[0-9]+\"),\n    cols_remove = FALSE,\n  ) |>\n  # filter(!(plate == \"2023-10-14_Cov2\" & well_col == 1)) |>\n  left_join(metadata, by = join_by(Sample == Sample_ID)) |>\n  mutate(Target = if_else(Target == \"PMMV\", \"PMMoV\", Target)) |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 481\nColumns: 36\n$ Well                    <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,…\n$ well_row                <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"…\n$ well_col                <chr> \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"…\n$ `Well Position`         <chr> \"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"A7\", \"A8\"…\n$ Omit                    <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS…\n$ Sample                  <chr> \"1A\", \"1A\", \"1A\", \"10000.0\", \"10000.0\", \"10000…\n$ Target                  <chr> \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\"…\n$ Task                    <chr> \"UNKNOWN\", \"UNKNOWN\", \"UNKNOWN\", \"STANDARD\", \"…\n$ Reporter                <chr> \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM…\n$ Quencher                <chr> \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"N…\n$ `Amp Status`            <chr> \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP…\n$ `Amp Score`             <dbl> 1.3915582, 1.4014582, 1.4073581, 1.4090574, 1.…\n$ `Curve Quality`         <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ `Result Quality Issues` <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Cq                      <dbl> 33.15919, 32.98389, 32.66178, 22.39386, 22.220…\n$ `Cq Confidence`         <dbl> 0.9759085, 0.9891340, 0.9883204, 0.9891666, 0.…\n$ `Cq Mean`               <dbl> 32.93495, 32.93495, 32.93495, 22.31821, 22.318…\n$ `Cq SD`                 <dbl> 0.25229116, 0.25229116, 0.25229116, 0.08875503…\n$ `Auto Threshold`        <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ Threshold               <dbl> 0.2999157, 0.2999157, 0.2999157, 0.2999157, 0.…\n$ `Auto Baseline`         <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ `Baseline Start`        <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ `Baseline End`          <dbl> 27, 27, 26, 16, 16, 16, 24, 23, 23, 20, 20, 19…\n$ plate                   <chr> \"2023-10-09_Cov2_PMMV\", \"2023-10-09_Cov2_PMMV\"…\n$ TreatmentGroup          <chr> \"Centrifuge + 0.45 filter\", \"Centrifuge + 0.45…\n$ VortexMin               <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ CFSpeed                 <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ CollectionDate          <date> 2023-10-02, 2023-10-02, 2023-10-02, NA, NA, N…\n$ Source                  <chr> \"N-S mix\", \"N-S mix\", \"N-S mix\", NA, NA, NA, \"…\n$ Volume                  <dbl> 280, 280, 280, NA, NA, NA, 280, 280, 280, NA, …\n$ Qubit_ID                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ProcessingHandler       <chr> \"Ari\", \"Ari\", \"Ari\", NA, NA, NA, \"Ari\", \"Ari\",…\n$ ExtractionHandler       <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ `qPCR date`             <date> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ qPCRHandler             <chr> \"Olivia\", \"Olivia\", \"Olivia\", NA, NA, NA, \"Oli…\n$ qPCR_dilution           <chr> \"1:5\", \"1:5\", \"1:5\", NA, NA, NA, \"1:5\", \"1:5\",…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\namp_data <- list.files(\n  map_chr(experiments, function(exp) {\n    here(data_dir, exp, \"qpcr\")\n  }),\n  pattern = \"Amplification Data\",\n  recursive = TRUE,\n  full.names = TRUE,\n) |>\n  print() |>\n  map(function(f) {\n    read_csv(f,\n      skip = 23,\n      col_types = col_types,\n    ) |>\n      mutate(plate = get_plate(f))\n  }) |>\n  list_rbind() |>\n  mutate(Target = if_else(Target == \"PMMV\", \"PMMoV\", Target)) |>\n  left_join(tidy_data,\n    by = join_by(plate, Well, `Well Position`, Sample, Omit, Target)\n  ) |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"/Users/dan/airport/[2023-09-22] New Processing Tests/qpcr/2023-10-09_Cov2_PMMV_Amplification Data_20231010_125053.csv\"                                                         \n[2] \"/Users/dan/airport/[2023-09-22] New Processing Tests/qpcr/2023-10-09_CrA_16S_Amplification Data_20231010_125152.csv\"                                                           \n[3] \"/Users/dan/airport/[2023-09-22] New Processing Tests/qpcr/2023-10-09_Noro_Amplification Data_20231010_125241.csv\"                                                              \n[4] \"/Users/dan/airport/[2023-10-12] Settled Solids Protocol Development, Vortex Time and Centrifuge Settings/qpcr/2023-10-14_16S_Amplification Data_20231016_105058.csv\"           \n[5] \"/Users/dan/airport/[2023-10-12] Settled Solids Protocol Development, Vortex Time and Centrifuge Settings/qpcr/2023-10-14_Cov2_CORRECTED_Amplification Data_20231016_133517.csv\"\n[6] \"/Users/dan/airport/[2023-10-12] Settled Solids Protocol Development, Vortex Time and Centrifuge Settings/qpcr/2023-10-14_CrA_Amplification Data_20231016_104600.csv\"           \n[7] \"/Users/dan/airport/[2023-10-12] Settled Solids Protocol Development, Vortex Time and Centrifuge Settings/qpcr/2023-10-14_Noro_Amplification Data_20231016_130005.csv\"          \n[8] \"/Users/dan/airport/[2023-10-12] Settled Solids Protocol Development, Vortex Time and Centrifuge Settings/qpcr/2023-10-14_PMMoV_Amplification Data_20231016_104527.csv\"         \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The following named parsers don't match the column names: Cq, TreatmentGroup\nThe following named parsers don't match the column names: Cq, TreatmentGroup\nThe following named parsers don't match the column names: Cq, TreatmentGroup\nThe following named parsers don't match the column names: Cq, TreatmentGroup\nThe following named parsers don't match the column names: Cq, TreatmentGroup\nThe following named parsers don't match the column names: Cq, TreatmentGroup\nThe following named parsers don't match the column names: Cq, TreatmentGroup\nThe following named parsers don't match the column names: Cq, TreatmentGroup\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 19,240\nColumns: 39\n$ Well                    <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ `Well Position`         <chr> \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\"…\n$ `Cycle Number`          <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,…\n$ Target                  <chr> \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\", \"Cov2\"…\n$ Rn                      <dbl> 0.6443956, 0.6382574, 0.6284555, 0.6179680, 0.…\n$ dRn                     <dbl> 2.836028e-02, 2.374099e-02, 1.545804e-02, 6.48…\n$ Sample                  <chr> \"1A\", \"1A\", \"1A\", \"1A\", \"1A\", \"1A\", \"1A\", \"1A\"…\n$ Omit                    <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS…\n$ plate                   <chr> \"2023-10-09_Cov2_PMMV\", \"2023-10-09_Cov2_PMMV\"…\n$ well_row                <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"…\n$ well_col                <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"…\n$ Task                    <chr> \"UNKNOWN\", \"UNKNOWN\", \"UNKNOWN\", \"UNKNOWN\", \"U…\n$ Reporter                <chr> \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM\", \"FAM…\n$ Quencher                <chr> \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\", \"N…\n$ `Amp Status`            <chr> \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP\", \"AMP…\n$ `Amp Score`             <dbl> 1.391558, 1.391558, 1.391558, 1.391558, 1.3915…\n$ `Curve Quality`         <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ `Result Quality Issues` <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Cq                      <dbl> 33.15919, 33.15919, 33.15919, 33.15919, 33.159…\n$ `Cq Confidence`         <dbl> 0.9759085, 0.9759085, 0.9759085, 0.9759085, 0.…\n$ `Cq Mean`               <dbl> 32.93495, 32.93495, 32.93495, 32.93495, 32.934…\n$ `Cq SD`                 <dbl> 0.2522912, 0.2522912, 0.2522912, 0.2522912, 0.…\n$ `Auto Threshold`        <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ Threshold               <dbl> 0.2999157, 0.2999157, 0.2999157, 0.2999157, 0.…\n$ `Auto Baseline`         <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ `Baseline Start`        <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ `Baseline End`          <dbl> 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27…\n$ TreatmentGroup          <chr> \"Centrifuge + 0.45 filter\", \"Centrifuge + 0.45…\n$ VortexMin               <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ CFSpeed                 <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ CollectionDate          <date> 2023-10-02, 2023-10-02, 2023-10-02, 2023-10-0…\n$ Source                  <chr> \"N-S mix\", \"N-S mix\", \"N-S mix\", \"N-S mix\", \"N…\n$ Volume                  <dbl> 280, 280, 280, 280, 280, 280, 280, 280, 280, 2…\n$ Qubit_ID                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ ProcessingHandler       <chr> \"Ari\", \"Ari\", \"Ari\", \"Ari\", \"Ari\", \"Ari\", \"Ari…\n$ ExtractionHandler       <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ `qPCR date`             <date> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ qPCRHandler             <chr> \"Olivia\", \"Olivia\", \"Olivia\", \"Olivia\", \"Olivi…\n$ qPCR_dilution           <chr> \"1:5\", \"1:5\", \"1:5\", \"1:5\", \"1:5\", \"1:5\", \"1:5…\n```\n:::\n:::\n\n\n## Quality control\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data |> count(Task, is.na(Cq))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  Task     `is.na(Cq)`     n\n  <chr>    <lgl>       <int>\n1 NTC      FALSE           3\n2 NTC      TRUE           28\n3 STANDARD FALSE         133\n4 STANDARD TRUE            2\n5 UNKNOWN  FALSE         314\n6 UNKNOWN  TRUE            1\n```\n:::\n\n```{.r .cell-code}\ntidy_data |>\n  filter(Task == \"NTC\", !is.na(Cq)) |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 3\nColumns: 36\n$ Well                    <dbl> 85, 86, 87\n$ well_row                <chr> \"H\", \"H\", \"H\"\n$ well_col                <chr> \"1\", \"2\", \"3\"\n$ `Well Position`         <chr> \"H1\", \"H2\", \"H3\"\n$ Omit                    <lgl> FALSE, FALSE, FALSE\n$ Sample                  <chr> NA, NA, NA\n$ Target                  <chr> \"16S\", \"16S\", \"16S\"\n$ Task                    <chr> \"NTC\", \"NTC\", \"NTC\"\n$ Reporter                <chr> \"FAM\", \"FAM\", \"FAM\"\n$ Quencher                <chr> \"NFQ-MGB\", \"NFQ-MGB\", \"NFQ-MGB\"\n$ `Amp Status`            <chr> \"AMP\", \"AMP\", \"AMP\"\n$ `Amp Score`             <dbl> 1.418582, 1.403374, 1.409229\n$ `Curve Quality`         <lgl> NA, NA, NA\n$ `Result Quality Issues` <lgl> NA, NA, NA\n$ Cq                      <dbl> 29.98365, 30.00206, 29.95623\n$ `Cq Confidence`         <dbl> 0.9892989, 0.9831535, 0.9896414\n$ `Cq Mean`               <dbl> 29.98065, 29.98065, 29.98065\n$ `Cq SD`                 <dbl> 0.02306268, 0.02306268, 0.02306268\n$ `Auto Threshold`        <lgl> TRUE, TRUE, TRUE\n$ Threshold               <dbl> 0.2693924, 0.2693924, 0.2693924\n$ `Auto Baseline`         <lgl> TRUE, TRUE, TRUE\n$ `Baseline Start`        <dbl> 3, 3, 3\n$ `Baseline End`          <dbl> 23, 21, 23\n$ plate                   <chr> \"2023-10-14_16S\", \"2023-10-14_16S\", \"2023-10-1…\n$ TreatmentGroup          <chr> NA, NA, NA\n$ VortexMin               <dbl> NA, NA, NA\n$ CFSpeed                 <dbl> NA, NA, NA\n$ CollectionDate          <date> NA, NA, NA\n$ Source                  <chr> NA, NA, NA\n$ Volume                  <dbl> NA, NA, NA\n$ Qubit_ID                <lgl> NA, NA, NA\n$ ProcessingHandler       <chr> NA, NA, NA\n$ ExtractionHandler       <chr> NA, NA, NA\n$ `qPCR date`             <date> NA, NA, NA\n$ qPCRHandler             <chr> NA, NA, NA\n$ qPCR_dilution           <chr> NA, NA, NA\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\namp_data |>\n  filter(Task == \"NTC\") |>\n  ggplot(aes(x = `Cycle Number`, y = dRn)) +\n  geom_line(mapping = aes(\n    group = Well,\n  )) +\n  geom_line(mapping = aes(\n    x = `Cycle Number`,\n    y = Threshold\n  ), color = \"Grey\") +\n  scale_y_log10(limits = c(1e-3, 1e1)) +\n  facet_wrap(~ interaction(plate, Target))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 234 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-10-16-combined_protocol_experiments_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nThere is amplification of the NTC for the 2023-10-14_16S plate. Olivia says:\n\n> Those are not an error. We should discuss this- the plates we are using for qPCR are not sterile. That’s not a problem for most assays, but so far we’ve almost always had amplification in the 16S negative controls. It’s usually much lower than the samples and lowest standards, though.\n\nVerify:\n\n\n::: {.cell}\n\n```{.r .cell-code}\namp_data |>\n  filter(plate == \"2023-10-14_16S\" & (Task == \"NTC\" | Task == \"STANDARD\")) |>\n  ggplot(aes(x = `Cycle Number`, y = dRn)) +\n  geom_line(mapping = aes(\n    color = Task,\n    group = Well,\n  )) +\n  geom_line(mapping = aes(\n    x = `Cycle Number`,\n    y = Threshold\n  ), color = \"Grey\") +\n  scale_y_log10(limits = c(1e-3, 1e1))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 29 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-10-16-combined_protocol_experiments_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\namp_data |>\n  filter(Task == \"UNKNOWN\" & is.na(Cq)) |>\n  print() |>\n  ggplot(aes(x = `Cycle Number`, y = dRn)) +\n  geom_line(mapping = aes(\n    color = Task,\n    group = Well,\n  )) +\n  geom_line(mapping = aes(\n    x = `Cycle Number`,\n    y = Threshold\n  ), color = \"Grey\") +\n  scale_y_log10(limits = c(1e-3, 1e1))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 40 × 39\n    Well `Well Position` `Cycle Number` Target    Rn      dRn Sample Omit  plate\n   <dbl> <chr>                    <dbl> <chr>  <dbl>    <dbl> <chr>  <lgl> <chr>\n 1    90 H6                           1 PMMoV  0.350 -0.0310  4-2    FALSE 2023…\n 2    90 H6                           2 PMMoV  0.353 -0.0290  4-2    FALSE 2023…\n 3    90 H6                           3 PMMoV  0.363 -0.0211  4-2    FALSE 2023…\n 4    90 H6                           4 PMMoV  0.371 -0.0143  4-2    FALSE 2023…\n 5    90 H6                           5 PMMoV  0.378 -0.00919 4-2    FALSE 2023…\n 6    90 H6                           6 PMMoV  0.383 -0.00520 4-2    FALSE 2023…\n 7    90 H6                           7 PMMoV  0.389 -0.00109 4-2    FALSE 2023…\n 8    90 H6                           8 PMMoV  0.393  0.00154 4-2    FALSE 2023…\n 9    90 H6                           9 PMMoV  0.395  0.00290 4-2    FALSE 2023…\n10    90 H6                          10 PMMoV  0.398  0.00399 4-2    FALSE 2023…\n# ℹ 30 more rows\n# ℹ 30 more variables: well_row <chr>, well_col <chr>, Task <chr>,\n#   Reporter <chr>, Quencher <chr>, `Amp Status` <chr>, `Amp Score` <dbl>,\n#   `Curve Quality` <lgl>, `Result Quality Issues` <lgl>, Cq <dbl>,\n#   `Cq Confidence` <dbl>, `Cq Mean` <dbl>, `Cq SD` <dbl>,\n#   `Auto Threshold` <lgl>, Threshold <dbl>, `Auto Baseline` <lgl>,\n#   `Baseline Start` <dbl>, `Baseline End` <dbl>, TreatmentGroup <chr>, …\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 19 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-10-16-combined_protocol_experiments_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n### All the amplification curves\n\n\n::: {.cell}\n\n```{.r .cell-code}\namp_data |>\n  ggplot(aes(x = `Cycle Number`, y = dRn)) +\n  geom_line(mapping = aes(\n    color = Task,\n    group = Well,\n  )) +\n  geom_line(mapping = aes(\n    x = `Cycle Number`,\n    y = Threshold\n  ), color = \"Grey\") +\n  scale_y_log10(limits = c(1e-3, 1e1)) +\n  facet_grid(rows = vars(plate), cols = vars(Target))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in self$trans$transform(x): NaNs produced\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 295 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-10-16-combined_protocol_experiments_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n## Compare methods\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data |>\n  filter(Task == \"UNKNOWN\") |>\n  ggplot(mapping = aes(\n    x = Cq,\n    y = TreatmentGroup,\n    color = Source,\n    shape = as.factor(CollectionDate),\n  )) +\n  stat_summary(\n    fun.min = min,\n    fun.max = max,\n    fun = median,\n    position = position_dodge(width = 0.2),\n    size = 0.2\n  ) +\n  facet_wrap(facets = ~Target, scales = \"free_x\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 1 rows containing non-finite values (`stat_summary()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-10-16-combined_protocol_experiments_files/figure-html/unnamed-chunk-13-1.png){width=768}\n:::\n:::\n\n\nMike:\n> @Dan R for the second experiment ([2023-10-10] Daily Processing Protocol Testing) can you create a figure where they y-axis is the wastewater sample (N Inf, S Inf, or SS), and the color is the treatment?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data |>\n  filter(Task == \"UNKNOWN\", CollectionDate == \"2023-10-11\") |>\n  ggplot(mapping = aes(\n    x = Cq,\n    y = Source,\n    color = TreatmentGroup,\n  )) +\n  stat_summary(\n    fun.min = min,\n    fun.max = max,\n    fun = median,\n    position = position_dodge(width = 0.2),\n    size = 0.2\n  ) +\n  facet_wrap(facets = ~Target, scales = \"free_x\") +\n  theme(legend.position = \"bottom\") +\n  theme(panel.spacing.x = unit(6, \"mm\"))\n```\n\n::: {.cell-output-display}\n![](2023-10-16-combined_protocol_experiments_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n> Then for the 3rd experiment (2×2 design), maybe set color to centrifuge and shape to vortex treatment, and make one plot where y = centrifuge and a second plot where y = vortex\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data |>\n  filter(Task == \"UNKNOWN\", CollectionDate == \"2023-10-12\") |>\n  ggplot(mapping = aes(\n    x = Cq,\n    y = as.factor(CFSpeed),\n    color = as.factor(VortexMin),\n    group = Sample\n  )) +\n  stat_summary(\n    fun.min = min,\n    fun.max = max,\n    fun = median,\n    position = position_dodge(width = 0.2),\n    size = 0.2\n  ) +\n  facet_wrap(facets = ~Target, scales = \"free_x\") +\n  theme(legend.position = \"bottom\") +\n  theme(panel.spacing.x = unit(6, \"mm\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 1 rows containing non-finite values (`stat_summary()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-10-16-combined_protocol_experiments_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_data |>\n  filter(Task == \"UNKNOWN\", CollectionDate == \"2023-10-12\") |>\n  ggplot(mapping = aes(\n    x = Cq,\n    y = as.factor(VortexMin),\n    color = as.factor(CFSpeed),\n    group = Sample\n  )) +\n  stat_summary(\n    fun.min = min,\n    fun.max = max,\n    fun = median,\n    position = position_dodge(width = 0.2),\n    size = 0.2\n  ) +\n  facet_wrap(facets = ~Target, scales = \"free_x\") +\n  theme(legend.position = \"bottom\") +\n  theme(panel.spacing.x = unit(6, \"mm\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 1 rows containing non-finite values (`stat_summary()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-10-16-combined_protocol_experiments_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "2023-10-16-combined_protocol_experiments_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}