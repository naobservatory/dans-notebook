{
  "hash": "35896b5b8c7a4874e0c0670f1272b5d0",
  "result": {
    "markdown": "---\ntitle: \"2023-08-29 qPCR Analysis\"\nauthor: \"Dan Rice\"\ndate: 2023-08-29\nformat:\n  html:\n    code-fold: false\n---\n\n## Objectives\n\n- Compare several wastewater filtering options by measuring the nucleic acid content by qPCR. [Experimental design here](https://docs.google.com/document/d/10aEcOwlJ0ZZANC93gd5KM6j-u8T8MI4ML7Ibh5uivMo/edit?usp=sharing).\n- Get Dan up to speed with working with this data.\n- Explore options for data analysis workflows.\n\n## Preliminary work\n\n- Ari put the `.eds` files into Google Drive from the lab computer. (He also exported some Excel files but we're not using those.)\n- Dan installed the Google Drive desktop app and Design and Analysis on his Mac, opened the `.eds` files, and fixed some missing data in the plate layout\n- Dan used the \"Analyze\" in Design and Analysis to automatically calculate thresholds and compute `c_q` values.\n- Dan exported the data to `.csv`.\n- Symlinked the google drive folder for the airport experiment to `~/airport/` on his computer so I don't have to refer to the whole filepath here.\n\n## Data import\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(purrr)\n\ndata_dir <- \"~/airport/[2023-08-29] CP Prefilters vs Vacuum Filters/Test 1 qPCR Results/csv/\"\nfilename_pattern <- \"Results\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nraw_data <- list.files(\n  data_dir,\n  pattern = filename_pattern,\n  full.names = TRUE\n) |>\n  map(function(f) read_csv(f, skip = 23)) |>\n  list_rbind()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 36 Columns: 21\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): Well Position, Sample, Target, Task, Reporter, Quencher, Amp Status...\ndbl (8): Well, Amp Score, Cq Confidence, Cq Mean, Cq SD, Threshold, Baseline...\nlgl (5): Omit, Curve Quality, Result Quality Issues, Auto Threshold, Auto Ba...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 29 Columns: 21\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): Well Position, Sample, Target, Task, Reporter, Quencher, Amp Status...\ndbl (8): Well, Amp Score, Cq Confidence, Cq Mean, Cq SD, Threshold, Baseline...\nlgl (5): Omit, Curve Quality, Result Quality Issues, Auto Threshold, Auto Ba...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nprint(raw_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 65 × 21\n    Well `Well Position` Omit  Sample Target Task    Reporter Quencher\n   <dbl> <chr>           <lgl> <chr>  <chr>  <chr>   <chr>    <chr>   \n 1     1 A1              FALSE 1      CrA    UNKNOWN FAM      NFQ-MGB \n 2     2 A2              FALSE 1      CrA    UNKNOWN FAM      NFQ-MGB \n 3     3 A3              FALSE 1      CrA    UNKNOWN FAM      NFQ-MGB \n 4     5 A5              FALSE 1      16S    UNKNOWN FAM      NFQ-MGB \n 5     6 A6              FALSE 1      16S    UNKNOWN FAM      NFQ-MGB \n 6     7 A7              FALSE 1      16S    UNKNOWN FAM      NFQ-MGB \n 7    13 B1              FALSE 2      CrA    UNKNOWN FAM      NFQ-MGB \n 8    14 B2              FALSE 2      CrA    UNKNOWN FAM      NFQ-MGB \n 9    15 B3              FALSE 2      CrA    UNKNOWN FAM      NFQ-MGB \n10    17 B5              FALSE 2      16S    UNKNOWN FAM      NFQ-MGB \n# ℹ 55 more rows\n# ℹ 13 more variables: `Amp Status` <chr>, `Amp Score` <dbl>,\n#   `Curve Quality` <lgl>, `Result Quality Issues` <lgl>, Cq <chr>,\n#   `Cq Confidence` <dbl>, `Cq Mean` <dbl>, `Cq SD` <dbl>,\n#   `Auto Threshold` <lgl>, Threshold <dbl>, `Auto Baseline` <lgl>,\n#   `Baseline Start` <dbl>, `Baseline End` <dbl>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoding <- list(\n  \"1\" = \"Normal centrifugation/filtration, regular CP\",\n  \"2\" = \"Normal centrifugation/filtration, regular CP\",\n  \"3\" = \"Normal centrifugation, no filtration, prefilter CP\",\n  \"4\" = \"Normal centrifugation, no filtration, prefilter CP\",\n  \"5\" = \"No centrifugation/filtration, prefilter CP\",\n  \"6\" = \"No centrifugation/filtration, prefilter CP\"\n)\ntidy_data <- raw_data |>\n  mutate(\n    Cq = as.double(Cq),\n    Treatment = recode(Sample, !!!coding)\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `Cq = as.double(Cq)`.\nCaused by warning:\n! NAs introduced by coercion\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\ntidy_data |>\n  ggplot(mapping = aes(x = Cq, y = Treatment, color = Sample)) +\n  geom_point(alpha = 0.5) +\n  facet_wrap(facets = ~Target)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 11 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-08-29-qpcr_analysis_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## TODO\n\n- ~~Figure out what the `Sample` numbers mean with respect to the different treatments~~\n- There are a few NaNs that show up as missing points and aren't evident in the plot. Will investigate later.\n",
    "supporting": [
      "2023-08-29-qpcr_analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
