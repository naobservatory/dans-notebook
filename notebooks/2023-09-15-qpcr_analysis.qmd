---
title: "2023-09-13 Extraction Experiment 2 qPCR Analysis"
author: "Dan Rice"
date: 2023-09-15
toc: true
format:
  html:
    code-fold: false
---
## Objectives

Testing the efficacy of RNA extraction kits in settled solid samples.
See [experiment google doc](https://docs.google.com/document/d/1Po6eE3LHc9svHC4yfnDak-B-sKa7o1Pc1noFMoSbFSE/edit?usp=sharing).

## Preliminary work

- Olivia put the `.eds` files in `NAO qPCR data/Olivia` on Google Drive and shared the folder with Dan.
- Google Drive for desktop only syncs shared drives, not shared folders in other drives, so Dan figured out a work around. He made a shortcut to the shared folder in his own google drive so it would sync locally.
- Opened up the `.eds` files in Design and Analysis locally and exported to `.csv` and saved those in the airport experiment folder on the main google drive.
- Found a Google Sheet with metadata, downloaded as CSV and added the CSV back to the Google Drive

## Data import

```{r}
library(readr)
library(dplyr)
library(purrr)
library(stringr)
library(ggplot2)
library(tidyr)
library(broom)
```

```{r}
data_dir <-
  "~/airport/[2023-09-06] Extraction-kit comparison 2: Settled Solids/"
filename_pattern <- "Results"
```

```{r}
col_types <- list(
  Target = col_character(),
  Cq = col_double()
)
raw_data <- list.files(
  paste0(data_dir, "qpcr"),
  pattern = filename_pattern,
  full.names = TRUE,
) |>
  print() |>
  map(function(f) {
    read_csv(f,
      skip = 23,
      col_types = col_types,
    )
  }) |>
  list_rbind()
print(raw_data)
```

There were some wells mixed up between the intended plate layout and
the actual plate for Norovirus. See [Results doc](https://docs.google.com/document/d/1tW-D4xxeYafqgjE4Sw0WGtCAkgf_qGxNhoWq2x7zHY4/edit#bookmark=id.jgbgdox3hte1).

```{r}
corrected_samples <- tribble(
  ~`Well Position`, ~Sample,
  "F7",             "empty",
  "F8",             "empty",
  "F9",             "empty",
  "F10",            "empty",
  "F11",            "empty",
  "F12",            "empty",
  "G7",             "6C/100",
  "G8",             "6C/10",
  "G9",             "7C/100",
  "G10",            "7C/10",
  "G11",            "3C/100",
  "G12",            "3C/10",
  "H7",             "1C/100",
  "H8",             "1C/10",
  "H9",             "1C/100",
  "H10",            "1C/10",
  "H11",            "NTC",
  "H12",            "NTC",
)
corrected_samples$Target <- "Noro"
print(corrected_samples)
```

```{r}
corrected_raw_data <- raw_data |>
  left_join(corrected_samples, by = join_by(`Well Position`, Target)) |>
  mutate(Sample = ifelse(is.na(Sample.y), Sample.x, Sample.y)) |>
  print()
corrected_raw_data |>
  count(Target, Sample) |>
  print(n = Inf)
```

```{r}
metadata_file <- paste0(
  data_dir,
  "[2023-09-11] Extraction Experiment 2 templates and results",
  " - sampleMetadata.csv"
)
metadata <- read_csv(metadata_file)
glimpse(metadata)
```

```{r}
tidy_data <- corrected_raw_data |>
  mutate(
    Sample_ID = str_split_i(Sample, "/", 1),
    dilution = as.integer(str_split_i(Sample, "/", 2)),
    replicate = str_extract(Sample_ID, "[A-Z]$"),
    quantity = as.double(Sample),
  ) |>
  mutate(dilution = replace_na(dilution, 1)) |>
  left_join(
    metadata,
    by = join_by(Sample_ID)
  )
glimpse(tidy_data)
```

```{r}
tidy_data |>
  count(Sample_ID, Target, dilution, replicate) |>
  print(n = Inf)
```

```{r}
tidy_data |>
  count(`Result Quality Issues`)
```

## Kit comparison

### With equal Cq axes

```{r}
tidy_data |>
  filter(
    !is.na(Extraction_kit),
    dilution == 1,
  ) |>
  ggplot(mapping = aes(
    x = Cq,
    y = Extraction_kit,
    color = replicate,
  )) +
  stat_summary(
    fun.min = min,
    fun.max = max,
    fun = median,
    position = position_dodge(width = 0.2),
    size = 0.2
  ) +
  facet_wrap(facets = ~Target)
```

### With free Cq axes

```{r}
tidy_data |>
  filter(
    !is.na(Extraction_kit),
    dilution == 1,
  ) |>
  ggplot(mapping = aes(
    x = Cq,
    y = Extraction_kit,
    color = replicate,
  )) +
  stat_summary(
    fun.min = min,
    fun.max = max,
    fun = median,
    position = position_dodge(width = 0.2),
    size = 0.2
  ) +
  facet_wrap(facets = ~Target, scales = "free_x")
```

Check that the overlapping points really do have three values

```{r}
tidy_data |>
  filter(!is.na(Extraction_kit), is.na(Cq)) |>
  count(Target, Extraction_kit, Sample_ID, dilution) |>
  print()
```

```{r}
tidy_data |>
  filter(
    Extraction_kit == "Zymo quick-RNA",
    Target == "CrA", replicate == "A"
  ) |>
  print(width = Inf)
```

### Adjusting for elution volume

Assume the amplification efficiency is 100%, so that
an increase in initial concentration by a factor of $x$
decreases $C_q$ by $\log_{2}(x)$.

If a method has elution volume $v$ and we dilute it to total volume $V$,
this reduces its final concentration by a factor $v / V$.
We can put different
methods on the same footing by adding $\log_{2}(v/V)$ to $C_q$
(so that large elution volumes are penalized with a higher adjusted $C_q$).

```{r}
final_volume <- 100
tidy_data |>
  mutate(elution_adjusted_Cq = Cq + log2(Elution_volume / final_volume)) |>
  filter(
    !is.na(Extraction_kit),
    dilution == 1,
  ) |>
  ggplot(mapping = aes(
    x = elution_adjusted_Cq,
    y = Extraction_kit,
    color = replicate,
  )) +
  stat_summary(
    fun.min = min,
    fun.max = max,
    fun = median,
    position = position_dodge(width = 0.2),
    size = 0.2
  ) +
  facet_wrap(facets = ~Target, scales = "free_x")
```
## Standard curves

```{r}
tidy_data |>
  filter(
    Task == "STANDARD",
    dilution == 1,
  ) |>
  ggplot(mapping = aes(
    x = quantity,
    y = Cq,
  )) +
  stat_summary(
    fun.min = min,
    fun.max = max,
    fun = median,
    position = position_dodge(width = 0.2),
    size = 0.2
  ) +
  geom_smooth(method = "lm") +
  scale_x_continuous(trans = "log10") +
  facet_wrap(facets = ~Target, scales = "free_x")
```

Not sure what the units of the X-axis are

```{r}
fits <- tibble()
for (target in unique(tidy_data$Target)) {
  fit <- lm(Cq ~ log10(quantity),
    data = filter(tidy_data, Task == "STANDARD", Target == target)
  ) |>
    tidy() |>
    mutate(Target = target, efficiency = 10^-(1 / estimate) - 1)
  fits <- bind_rows(fits, fit)
}
print(fits |> filter(term == "log10(quantity)"))
```
These match the Design & Analysis software.

## Dilution series

```{r}
tidy_data |>
  filter(Task == "UNKNOWN", dilution > 1) |>
  count(Target, Extraction_kit, dilution) |>
  print(n = Inf)
```

Looks like we have dilution series for four kits.

```{r}
dilution_kits <- c(
  "Invitrogen PureLink RNA",
  "QIAamp Viral RNA mini kit",
  "Qiagen AllPrep PowerViral DNA/RNA",
  "Zymo quick-RNA"
)
tidy_data |>
  filter(
    Task == "UNKNOWN",
    Target != "16S",
    is.element(Extraction_kit, dilution_kits)
  ) |>
  ggplot(mapping = aes(
    x = dilution,
    y = Cq,
  )) +
  geom_point(mapping = aes(color = replicate)) +
  geom_smooth(method = "lm") +
  scale_x_continuous(trans = "log10") +
  facet_grid(cols = vars(Extraction_kit), rows = vars(Target), scale = "free_y")
```

```{r}
fits <- tibble()
for (target in unique(tidy_data$Target)) {
  for (kit in dilution_kits) {
    fit <- lm(Cq ~ log10(dilution),
      data = filter(tidy_data, Target == target, Extraction_kit == kit)
    ) |>
      tidy() |>
      mutate(
        Target = target,
        Extraction_kit = kit,
        # Changed sign because we have dilution factor not quantity
        efficiency = 10^(1 / estimate) - 1
      )
    fits <- bind_rows(fits, fit)
  }
}
print(fits |> filter(Target != "16S", term == "log10(dilution)"))
```

## Amplification curves

```{r}
amp_data <- list.files(
  paste0(data_dir, "qpcr"),
  pattern = "Amplification Data",
  full.names = TRUE,
) |>
  map(function(f) {
    read_csv(f,
      skip = 23,
      col_types = col_types,
    )
  }) |>
  list_rbind() |>
  mutate(
    replicate = str_extract(Sample, "[A-Z]"),
    Sample_ID = str_split_i(Sample, "/", 1),
    dilution = as.integer(str_split_i(Sample, "/", 2)),
    quantity = as.double(Sample),
  ) |>
  mutate(dilution = replace_na(dilution, 1)) |>
  left_join(
    metadata,
    by = join_by(Sample_ID)
  )
print(amp_data)
```

```{r, fig.width=14}
amp_data |>
  filter(!is.na(Extraction_kit)) |>
  ggplot(mapping = aes(
    x = `Cycle Number`,
    y = dRn,
    color = as.factor(dilution),
    group = Well
  )) +
  geom_line() +
  facet_grid(
    cols = vars(Extraction_kit), rows = vars(Target), scales = "free_y"
  )
```

## Background fluorescence

```{r}
raw_qpcr_data <- list.files(
  paste0(data_dir, "qpcr"),
  pattern = "_Multicomponent_",
  full.names = TRUE,
) |>
  print() |>
  map(function(f) {
    read_csv(f,
      skip = 23,
      col_types = col_types,
    )
  }) |>
  list_rbind() |>
  print()
```

## TODO

- ~~Boxplots~~
- ~~Standard curve data~~
- ~~Diluted samples~~
- ~~Amplification curves~~
- Relabel flipped norovirus dilution samples
- Investigate the threshold
- Investigate the efficiency caluculations: compare amp curves, standard curves, and dilution series
- Check amplification curves, including autothreshold in linear phase. (Possibly adjust)
- Check negative controls (may need to use raw Rns rather than delta to avoid baseline subtraction issues)
- Be aware of non-control samples with no amplification detected (no Cq values). Summary stats of which this is true for.
- Plot baseline start and stop (determines the interval used for baseline subtraction)
- Background fluorescence
