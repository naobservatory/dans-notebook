---
title: "2023-10-24 Analysis of sludge dissociation test qPCR"
author: "Dan Rice"
date: 2023-10-24
toc: true
format:
  html:
    code-fold: false
---
## Objectives

See [Google Doc](https://docs.google.com/document/d/1p-xdPYJFIw5FudpNl-MknlrCM5OVLDtq9nfS4dbRnbQ/edit?usp=sharing)

## Preliminary work

Exported csv files from Olivia's eds file uploads.
Also exported metadata google sheets as CSV

## Data import

```{r}
library(here)
library(readr)
library(dplyr)
library(purrr)
library(stringr)
library(ggplot2)
library(tidyr)
library(broom)
library(ggh4x)
```

```{r}
get_plate <- function(f) {
  str_extract(basename(f),
    "(.*)_(.*)_[0-9]{8}_[0-9]{6}\\.csv",
    group = 1
  )
}
```

```{r}
data_dir <- here("~", "airport")
experiments <- c("[2023-10-18] New Combined Protocol run-through")
```

```{r}
filename_pattern <- "_Results_"
col_types <- list(
  Target = col_character(),
  Cq = col_double(),
  `Treatment Group` = col_character()
)
raw_data <- list.files(
  map_chr(experiments, function(exp) {
    here(data_dir, exp, "qpcr")
  }),
  pattern = filename_pattern,
  recursive = TRUE,
  full.names = TRUE,
) |>
  print() |>
  map(function(f) {
    read_csv(f, skip = 23, col_types = col_types) |>
      mutate(plate = get_plate(f))
  }) |>
  list_rbind() |>
  glimpse()
```


```{r}
metadata_file <- here(
  data_dir,
  experiments[1],
  "metadata.csv"
)
metadata <- experiments |>
  map(function(exp) {
    read_csv(here(data_dir, exp, "metadata.csv"), col_types = col_types)
  }) |>
  list_rbind() |>
  glimpse()
```

```{r}
tidy_data <- raw_data |>
  separate_wider_regex(
    `Well Position`,
    c(well_row = "[A-Z]+", well_col = "[0-9]+"),
    cols_remove = FALSE,
  ) |>
  left_join(metadata, by = join_by(Sample == Sample_ID)) |>
  mutate(Target = if_else(Target == "PMMV", "PMMoV", Target)) |>
  glimpse()
```

```{r}
amp_data <- list.files(
  map_chr(experiments, function(exp) {
    here(data_dir, exp, "qpcr")
  }),
  pattern = "Amplification Data",
  recursive = TRUE,
  full.names = TRUE,
) |>
  print() |>
  map(function(f) {
    read_csv(f,
      skip = 23,
      col_types = col_types,
    ) |>
      mutate(plate = get_plate(f))
  }) |>
  list_rbind() |>
  mutate(Target = if_else(Target == "PMMV", "PMMoV", Target)) |>
  left_join(tidy_data,
    by = join_by(plate, Well, `Well Position`, Sample, Omit, Target)
  ) |>
  glimpse()
```

## Quality control

```{r}
tidy_data |> count(Task, is.na(Cq))

tidy_data |>
  filter(Task == "NTC", !is.na(Cq)) |>
  glimpse()
```

```{r}
amp_data |>
  filter(Task == "NTC") |>
  ggplot(aes(x = `Cycle Number`, y = dRn)) +
  geom_line(mapping = aes(
    group = Well,
  )) +
  geom_line(mapping = aes(
    x = `Cycle Number`,
    y = Threshold
  ), color = "Grey") +
  scale_y_log10(limits = c(1e-3, 1e1)) +
  facet_wrap(~ interaction(plate, Target))
```

There is the usual amplification of 16S from contamination.

### All the amplification curves

```{r}
amp_data |>
  ggplot(aes(x = `Cycle Number`, y = dRn)) +
  geom_line(mapping = aes(
    color = Task,
    group = Well,
  )) +
  geom_line(mapping = aes(
    x = `Cycle Number`,
    y = Threshold
  ), color = "Grey") +
  scale_y_log10(limits = c(1e-3, 1e1)) +
  facet_wrap(vars(Target))
```

### 16S unknowns only

Figure out the one outlier curve.

```{r}
tidy_data |>
  filter(Target == "16S", Task == "UNKNOWN") |>
  filter(Cq == max(Cq))
```

```{r}
amp_data |>
  filter(Target == "16S", Task == "UNKNOWN") |>
  ggplot(aes(x = `Cycle Number`, y = dRn)) +
  geom_line(mapping = aes(
    color = Well == 7,
    group = Well,
  )) +
  geom_line(mapping = aes(
    x = `Cycle Number`,
    y = Threshold
  ), color = "Grey") +
  scale_y_log10(limits = c(1e-3, 1e1))
```


This one well looks weird:

```{r}
amp_data |>
  filter(Target == "16S", Task == "UNKNOWN") |>
  ggplot(aes(x = `Cycle Number`, y = Rn)) +
  geom_line(mapping = aes(
    color = Well == 7,
    group = Well,
  )) +
  scale_y_log10() # limits = c(1e-3, 1e1))
```

### PMMoV only

One technical replicate is an outlier for low Cq:

```{r}
amp_data |>
  filter(Target == "PMMoV", Task == "UNKNOWN", `Treatment Group` == 3) |>
  ggplot(aes(x = `Cycle Number`, y = dRn)) +
  geom_line(mapping = aes(
    color = Sample,
    group = Well,
  )) +
  geom_line(mapping = aes(
    x = `Cycle Number`,
    y = Threshold
  ), color = "Grey") +
  scale_y_log10(limits = c(1e-3, 1e1))
```

Amp curve looks ok

## Compare methods

Using `ggh4x` to fix the scales to have the same spacing.
Currently doing manually, but should automate.

```{r fig.width=8}
scales <- list(
  scale_x_continuous(limits = c(21, 24)),
  scale_x_continuous(limits = c(32, 35)),
  scale_x_continuous(limits = c(21, 24)),
  scale_x_continuous(limits = c(27, 30)),
  scale_x_continuous(limits = c(22, 25))
)
tidy_data |>
  filter(Task == "UNKNOWN") |>
  ggplot(mapping = aes(
    x = Cq,
    y = Dissocation,
    color = Sample,
  )) +
  stat_summary(
    fun.min = min,
    fun.max = max,
    fun = median,
    position = position_dodge(width = 0.2),
    size = 0.2
  ) +
  facet_wrap(facets = ~Target, scales = "free_x") +
  facetted_pos_scales(x = scales)
```
